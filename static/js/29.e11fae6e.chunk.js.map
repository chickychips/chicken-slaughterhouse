{"version":3,"sources":["pages/storage/frozen/form/main/index.js","pages/storage/frozen/index.js"],"names":["TableFrozenStorage","state","searchText","sortedInfo","handleChange","pagination","filters","sorter","console","log","setState","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","type","onClick","icon","SearchOutlined","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","this","props","getFrozenItemStock","resetFrozenItemStock","columns","title","key","a","b","item_name","length","sortOrder","columnKey","order","productType","quantity_weight","quantity_volume","frozenItemStock","forEach","item","i","group","groupName","outputTypeName","className","dataSource","scroll","x","y","React","Component","connect","storage","dispatch","payload","frozenStorage","Helmet","to"],"mappings":"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","file":"static/js/29.e11fae6e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport Highlighter from 'react-highlight-words'\r\nimport { Table, Input, Button } from 'antd';\r\n\r\nconst mapStateToProps = ({ storage }) => ({\r\n  frozenItemStock: storage.frozenItemStock,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getFrozenItemStock: () => dispatch({ type: 'storage/GET_FROZEN_ITEM_STOCK' }),\r\n    resetFrozenItemStock: () => dispatch({ \r\n      type: 'storage/SET_STATE',\r\n      payload: {\r\n        frozenItemStock: [],          \r\n      },\r\n    }),\r\n  }\r\n}\r\n\r\nclass TableFrozenStorage extends React.Component {\r\n  state = {\r\n    searchText: '',\r\n    sortedInfo: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getFrozenItemStock , resetFrozenItemStock }= this.props;\r\n    resetFrozenItemStock();\r\n    getFrozenItemStock();\r\n  }\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(sorter);\r\n    this.setState({\r\n      sortedInfo: sorter,\r\n    })\r\n  }\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node\r\n          }}\r\n          // placeholder={`Search ${dataIndex}`}\r\n          placeholder='Cari'\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n          icon={<SearchOutlined />}\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) => {\r\n      record[dataIndex] = record[dataIndex] === null ? \"\" : record[dataIndex];\r\n      record[dataIndex]\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(value.toLowerCase())\r\n    },\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select())\r\n      }\r\n    },\r\n    render: text => {\r\n      const { searchText } = this.state\r\n      text = text === null ? \"\" : text;\r\n      return (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      )\r\n    },\r\n  })\r\n\r\n  handleSearch = (selectedKeys, confirm) => {\r\n    confirm()\r\n    this.setState({ searchText: selectedKeys[0] })\r\n  }\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters()\r\n    this.setState({ searchText: '' })\r\n  }\r\n\r\n  render() {\r\n    let { sortedInfo } = this.state\r\n    sortedInfo = sortedInfo || {}\r\n    const columns = [\r\n      {\r\n        title: 'Nama',\r\n        width: 150,\r\n        dataIndex: 'item_name',\r\n        key: 'item_name',\r\n        ...this.getColumnSearchProps('item_name'),\r\n        sorter: (a, b) => a.item_name.length - b.item_name.length,\r\n        sortOrder: sortedInfo.columnKey === 'item_name' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Tipe Produk',\r\n        dataIndex: 'productType',\r\n        key: 'productType',\r\n        width: 150,\r\n        ...this.getColumnSearchProps('productType'),\r\n        sorter: (a, b) => a.productType.length - b.productType.length,\r\n        sortOrder: sortedInfo.columnKey === 'productType' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Quantity (kg)',\r\n        dataIndex: 'quantity_weight',\r\n        key: 'quantity_weight',\r\n        width: 150,\r\n        ...this.getColumnSearchProps('quantity_weight'),\r\n        sorter: (a, b) => a.quantity_weight - b.quantity_weight,\r\n        sortOrder: sortedInfo.columnKey === 'quantity_weight' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Quantity (ekor/pax)',\r\n        dataIndex: 'quantity_volume',\r\n        key: 'quantity_volume',\r\n        width: 150,\r\n        ...this.getColumnSearchProps('quantity_volume'),\r\n        sorter: (a, b) => a.quantity_volume - b.quantity_volume,\r\n        sortOrder: sortedInfo.columnKey === 'quantity_volume' && sortedInfo.order,\r\n      },\r\n    ]\r\n\r\n    const { frozenItemStock }= this.props;\r\n    if (frozenItemStock.length > 0)\r\n    {\r\n      // Add key to each index so it will be unique\r\n      frozenItemStock.forEach((item, i) => {\r\n        item.key = i + 1;\r\n\r\n        item.item_name = `FROZEN ${item.item_name}`;\r\n        \r\n        // Define product type from group and output type\r\n        item.productType = item.group === \"alive\" ? \"BAHAN DASAR\" : \"HASIL CUTTING\";\r\n        if (item.productType === \"HASIL CUTTING\")\r\n        {\r\n          const groupName = item.group === \"whole\" ? \"\" : \" OLAHAN\";\r\n          const outputTypeName = item.type === \"main\" ? \" UTAMA\" : \" SAMPINGAN\";\r\n          item.productType = `${item.productType}${groupName}${outputTypeName}`;\r\n        }\r\n      });\r\n\r\n      return (\r\n        <div className=\"mb-4 kit__utils__scrollTable\">\r\n          <Table columns={columns} dataSource={frozenItemStock} onChange={this.handleChange} scroll={{ x: 1500, y: 300 }} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"mb-4 kit__utils__scrollTable\">\r\n        <Table columns={columns} scroll={{ x: 1500, y: 300 }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableFrozenStorage);","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet';\r\nimport { Button } from 'antd';\r\nimport TableFrozenStorage from './form/main';\r\n\r\nconst frozenStorage = () => {\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Gudang / Frozen\" />\r\n      <div className=\"kit__utils__heading\">\r\n        <h5>\r\n          <span className=\"mr-3\">Gudang Frozen</span>\r\n        </h5>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"px-4\">\r\n          <br />\r\n          <Link to='/'>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              style={{ width: 150, marginRight: 8 }}\r\n            >\r\n              Buat Surat Jalan\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <TableFrozenStorage />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default frozenStorage\r\n"],"sourceRoot":""}