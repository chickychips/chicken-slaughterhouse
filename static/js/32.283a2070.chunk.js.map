{"version":3,"sources":["pages/production/thawing/index.js"],"names":["Option","Select","ProcessThawing","state","transactionIdSelectOption","thawingDataDetails","totalQuantityWeight","totalQuantityVolume","customer","formRefInput","React","createRef","onTransactionIdChange","event","thawingData","props","setState","filter","data","reference_id","forEach","item","i","key","item_name_frozen","item_name","parseInt","quantity_weight","quantity_volume","current","setFieldsValue","onButtonAddClick","newThawingId","transactionId","getFieldsValue","length","notification","error","message","payload","thawingId","referenceId","items","processThawing","this","generateThawingId","getPendingTransaction","today","Date","toLocaleDateString","Object","keys","pendingTransactionId","map","o","value","title","className","labelCol","xs","span","sm","wrapperCol","ref","labelAlign","onFinish","Item","name","label","placeholder","disabled","id","onChange","columns","width","dataIndex","dataSource","to","onClick","Component","connect","thawing","dispatch","type"],"mappings":"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","file":"static/js/32.283a2070.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Table, Input, Select, Form, Button, notification } from 'antd';\r\n\r\nconst { Option } = Select\r\n\r\nconst mapStateToProps = ({ thawing }) => ({\r\n  newThawingId: thawing.newThawingId,\r\n  thawingData: thawing.thawingData,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generateThawingId: () => {\r\n      dispatch({\r\n        type: 'thawing/GENERATE_THAWING_ID',\r\n      })\r\n    },\r\n    getPendingTransaction: () => {\r\n      dispatch({\r\n        type: 'thawing/GET_DATA'\r\n      })\r\n    },\r\n    processThawing: (payload) => {\r\n      dispatch({\r\n        type: 'thawing/PROCESS_THAWING',\r\n        payload,\r\n      })\r\n    },\r\n  }\r\n}\r\n\r\nclass ProcessThawing extends React.Component {\r\n  state = {\r\n    transactionIdSelectOption: null,\r\n    thawingDataDetails: null,\r\n    totalQuantityWeight: null,\r\n    totalQuantityVolume: null,\r\n    customer: null,\r\n  }\r\n\r\n  formRefInput = React.createRef();\r\n\r\n  componentDidMount() {\r\n    const { generateThawingId, getPendingTransaction }= this.props;\r\n    generateThawingId();\r\n    getPendingTransaction();\r\n  }\r\n\r\n  onTransactionIdChange = (event) => {\r\n    const { thawingData }= this.props;\r\n    let thawingDataDetails = [];\r\n    let totalQuantityWeight = 0;\r\n    let totalQuantityVolume = 0;\r\n\r\n    this.setState({\r\n      thawingDataDetails,\r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n    })\r\n\r\n    thawingDataDetails = thawingData.thawingData.filter(data => {\r\n      return data.reference_id === event\r\n    })\r\n\r\n    thawingDataDetails.forEach((item, i) => {\r\n      // Add key to each index so it will be unique\r\n      item.key = i + 1;\r\n\r\n      // add frozen in front of item name\r\n      item.item_name_frozen = `FROZEN ${item.item_name}`;\r\n\r\n      // Calculate the total quantity of all item\r\n      totalQuantityWeight += parseInt(item.quantity_weight, 10);\r\n      totalQuantityVolume += parseInt(item.quantity_volume, 10);\r\n    });\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      customer: thawingDataDetails[0].customer,\r\n    });\r\n\r\n    this.setState({\r\n      thawingDataDetails,\r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n    })\r\n  }\r\n\r\n  onButtonAddClick = () => {\r\n    const { newThawingId } = this.props;\r\n\r\n    const { \r\n      transactionId\r\n    } = this.formRefInput.current.getFieldsValue();\r\n\r\n    const { \r\n      thawingDataDetails,\r\n    } = this.state;\r\n\r\n    if( thawingDataDetails === null || thawingDataDetails.length < 1)\r\n    {\r\n      notification.error({\r\n        message: 'Silahkan pilih kode invoice'\r\n      })\r\n      return;\r\n    }\r\n\r\n    const payload = \r\n      {\r\n        thawingId: newThawingId,\r\n        referenceId: transactionId,\r\n        items: thawingDataDetails,\r\n      }      \r\n\r\n    const { processThawing } = this.props;\r\n\r\n    // send data to backend\r\n    processThawing(payload);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Nama Item',\r\n        width: 100,\r\n        dataIndex: 'item_name_frozen',\r\n        key: 'item_name_frozen',\r\n      },\r\n      {\r\n        title: 'Qty (kg)',\r\n        width: 100,\r\n        dataIndex: 'quantity_weight',\r\n        key: 'quantity_weight',\r\n      },\r\n      {\r\n        title: 'Qty (Ekor/Pax)',\r\n        width: 100,\r\n        dataIndex: 'quantity_volume',\r\n        key: 'quantity_volume',\r\n      },\r\n    ]\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    }\r\n\r\n    const { newThawingId, thawingData }= this.props;\r\n\r\n    const fullDate = new Date();\r\n    const today = fullDate.toLocaleDateString(\"en-US\")\r\n    const isInputDisabled = true;\r\n\r\n    let { \r\n        transactionIdSelectOption, \r\n        customer,\r\n        thawingDataDetails,\r\n        totalQuantityWeight,\r\n        totalQuantityVolume,\r\n       } = this.state\r\n\r\n\r\n    transactionIdSelectOption = transactionIdSelectOption || [];\r\n\r\n    thawingDataDetails = thawingDataDetails || [];\r\n\r\n    totalQuantityWeight = totalQuantityWeight || 0;\r\n    totalQuantityVolume = totalQuantityVolume || 0;\r\n    customer = customer || \"\";\r\n\r\n    if(Object.keys(thawingData).length > 0)\r\n    {\r\n      // Populate invoice id list\r\n      transactionIdSelectOption = thawingData.pendingTransactionId.map(o => (\r\n        <Option value={o} key={o}>{o}</Option>\r\n      ))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Helmet title=\"Process / Thawing\" />\r\n        <div className=\"kit__utils__heading\">\r\n          <h5>Proses Thawing</h5>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form \r\n              {...formItemLayout} \r\n              ref={this.formRefInput}\r\n              labelAlign=\"left\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Form.Item name=\"newThawingId\" label=\"Kode Thawing\">\r\n                <Input placeholder={newThawingId} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item name=\"dateToday\" label=\"Tanggal\">\r\n                <Input placeholder={today} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item id=\"transactionId\" name=\"transactionId\" label=\"Kode Invoice\">\r\n                <Select onChange={this.onTransactionIdChange} placeholder=\"Pilih kode invoice\">\r\n                  {transactionIdSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"customer\" label=\"Pembeli\">\r\n                <Input placeholder={customer} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <div className=\"mb-4 kit__utils__scrollTable\">\r\n                <Table columns={columns} dataSource={thawingDataDetails} />\r\n              </div>\r\n            </Form>\r\n            <div className=\"border-top text-dark font-size-18 pt-4\">\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (kg): <strong className=\"font-size-24\">{totalQuantityWeight}</strong>\r\n              </p>\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (Ekor/Pax): <strong className=\"font-size-24\">{totalQuantityVolume}</strong>\r\n              </p>\r\n              <Link to=\"/\" className=\"kit__utils__link font-size-16\">\r\n                <i className=\"fe fe-arrow-left mr-1 align-middle\" />\r\n                Kembali\r\n              </Link>\r\n              <Button onClick={this.onButtonAddClick} className=\"btn btn-lg btn-success width-200 mb-2 float-right\">\r\n                Proses\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessThawing);\r\n"],"sourceRoot":""}