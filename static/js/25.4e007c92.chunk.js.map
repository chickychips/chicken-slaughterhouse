{"version":3,"sources":["pages/masterData/measurementUnit/form/main/index.js","pages/masterData/measurementUnit/index.js"],"names":["TableMeasurementUnit","state","searchText","sortedInfo","handleChange","pagination","filters","sorter","console","log","setState","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","type","onClick","icon","SearchOutlined","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","this","props","getMeasurementUnits","resetMeasurementUnitss","columns","title","key","a","b","name","length","sortOrder","columnKey","order","description","created_on","replace","created_by","modified_on","modified_by","fixed","measurementUnits","forEach","item","i","className","dataSource","scroll","x","y","React","Component","connect","masterData","dispatch","payload","MeasurementUnit","Helmet","to"],"mappings":"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","file":"static/js/25.4e007c92.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport Highlighter from 'react-highlight-words'\r\nimport { Table, Input, Button } from 'antd';\r\n\r\nconst mapStateToProps = ({ masterData }) => ({\r\n  measurementUnits: masterData.measurementUnits,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getMeasurementUnits: () => dispatch({ type: 'masterData/GET_MEASUREMENT_UNITS' }),\r\n    resetMeasurementUnitss: () => dispatch({ \r\n      type: 'masterData/SET_STATE',\r\n      payload: {\r\n        masterData: [],          \r\n      },\r\n    }),\r\n  }\r\n}\r\n\r\nclass TableMeasurementUnit extends React.Component {\r\n  state = {\r\n    searchText: '',\r\n    sortedInfo: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getMeasurementUnits , resetMeasurementUnitss }= this.props;\r\n    resetMeasurementUnitss();\r\n    getMeasurementUnits();\r\n  }\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(sorter);\r\n    // console.log('Various parameters', pagination, filters, sorter)\r\n    this.setState({\r\n      sortedInfo: sorter,\r\n    })\r\n  }\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node\r\n          }}\r\n          // placeholder={`Search ${dataIndex}`}\r\n          placeholder='Cari'\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n          icon={<SearchOutlined />}\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) => {\r\n      record[dataIndex] = record[dataIndex] === null ? \"\" : record[dataIndex];\r\n      record[dataIndex]\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(value.toLowerCase())\r\n    },\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select())\r\n      }\r\n    },\r\n    render: text => {\r\n      const { searchText } = this.state\r\n      text = text === null ? \"\" : text;\r\n      return (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      )\r\n    },\r\n  })\r\n\r\n  handleSearch = (selectedKeys, confirm) => {\r\n    confirm()\r\n    this.setState({ searchText: selectedKeys[0] })\r\n  }\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters()\r\n    this.setState({ searchText: '' })\r\n  }\r\n\r\n  render() {\r\n    let { sortedInfo } = this.state\r\n    sortedInfo = sortedInfo || {}\r\n    const columns = [\r\n      {\r\n        title: 'Nama',\r\n        width: 150,\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        ...this.getColumnSearchProps('name'),\r\n        sorter: (a, b) => a.name.length - b.name.length,\r\n        sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Deskripsi',\r\n        dataIndex: 'description',\r\n        key: 'description',\r\n        width: 200,\r\n        sorter: (a, b) => a.description.length - b.description.length,\r\n        sortOrder: sortedInfo.columnKey === 'description' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Created On',\r\n        dataIndex: 'created_on',\r\n        key: 'created_on',\r\n        width: 150,\r\n        ...this.getColumnSearchProps('created_on'),\r\n        sorter: (a, b) => a.created_on.replace(/-|:| |\\./g, '') - b.created_on.replace(/-|:| |\\./g, ''),\r\n        sortOrder: sortedInfo.columnKey === 'created_on' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Created By',\r\n        dataIndex: 'created_by',\r\n        key: 'created_by',\r\n        width: 150,\r\n        ...this.getColumnSearchProps('created_by'),\r\n        sorter: (a, b) => a.created_by.length - b.created_by.length,\r\n        sortOrder: sortedInfo.columnKey === 'created_by' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Modified On',\r\n        dataIndex: 'modified_on',\r\n        key: 'modified_on',\r\n        width: 150,\r\n        ...this.getColumnSearchProps('modified_on'),\r\n        sorter: (a, b) => (a.modified_on === null ? \"\" : a.modified_on.replace(/-|:| |\\./g, '')) - (b.modified_on === null ? \"\" : b.modified_on.replace(/-|:| |\\./g, '')),\r\n        sortOrder: sortedInfo.columnKey === 'modified_on' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Modified By',\r\n        dataIndex: 'modified_by',\r\n        key: 'modified_by',\r\n        width: 150,\r\n        ...this.getColumnSearchProps('modified_by'),\r\n        sorter: (a, b) => (a.modified_by === null ? \"\" : a.modified_by.length) - (b.modified_by === null ? \"\" : b.modified_by.length),\r\n        sortOrder: sortedInfo.columnKey === 'modified_by' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'operation',\r\n        fixed: 'right',\r\n        width: 60,\r\n        render: () => <a>Edit</a>,\r\n      },\r\n    ]\r\n\r\n    const { measurementUnits }= this.props;\r\n    if (measurementUnits.length > 0)\r\n    {\r\n      // Add key to each index so it will be unique\r\n      measurementUnits.forEach((item, i) => {\r\n        item.key = i + 1;\r\n      });\r\n\r\n      return (\r\n        <div className=\"mb-4 kit__utils__scrollTable\">\r\n          <Table columns={columns} dataSource={measurementUnits} onChange={this.handleChange} scroll={{ x: 1500, y: 300 }} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"mb-4 kit__utils__scrollTable\">\r\n        <Table columns={columns} scroll={{ x: 1500, y: 300 }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableMeasurementUnit);","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet';\r\nimport { Button } from 'antd';\r\nimport TableMeasurementUnit from './form/main';\r\n\r\nconst MeasurementUnit = () => {\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Daftar / Satuan Ukur\" />\r\n      <div className=\"kit__utils__heading\">\r\n        <h5>\r\n          <span className=\"mr-3\">Daftar Satuan Ukur</span>\r\n        </h5>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"px-4\">\r\n          <br />\r\n          <Link to='/master-data/measurement-unit/input'>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              style={{ width: 170, marginRight: 8 }}\r\n            >\r\n              Tambah Satuan Ukur\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <TableMeasurementUnit />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default MeasurementUnit\r\n"],"sourceRoot":""}