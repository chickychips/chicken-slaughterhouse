{"version":3,"sources":["pages/production/cutting/index.js"],"names":["Option","Select","ProcessCutting","state","productionIdSelectOption","formProductionIdHideToggle","outputItemSelectOption","inputItemSelectOption","outputItemList","inputQuantityVolumeMeasurementUnit","outputQuantityVolumeMeasurementUnit","isInputQuantityWeightDisabled","isInputQuantityVolumeDisabled","formRefInput","React","createRef","formRefOutput","onItemSourceChange","event","cuttingData","props","current","setFieldsValue","outputItemName","undefined","quantityWeight","quantityVolume","productionId","inputQuantityWeight","inputQuantityVolume","itemName","inputDataBuffer","supplyList","map","o","value","production_id","key","setState","inputItemDataBuffer","stockList","filter","data","group","is_input","item_name","onProductionIdChange","outputItemDataBuffer","itemList","name","inputItemList","quantity_weight","quantity_volume","onInputItemChange","console","log","itemGroup","type","onOutputItemChange","outputItemData","onButtonAddClick","newCuttingId","length","notification","error","message","getFieldsValue","payload","cuttingId","itemInput","itemOutput","referenceId","processCutting","onFinish","values","keyId","push","this","generateCuttingId","getCuttingData","columns","title","width","dataIndex","fixed","render","formItemLayout","labelCol","xs","span","sm","wrapperCol","today","Date","toLocaleDateString","Object","keys","result","className","ref","labelAlign","Item","label","placeholder","disabled","id","rules","required","onChange","style","display","addonAfter","dataSource","scroll","x","y","to","onClick","backgroundColor","Component","connect","cutting","dispatch"],"mappings":"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","file":"static/js/15.d5763d5c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Table, Input, Select, Form, Button, notification } from 'antd';\r\nimport './style.module.css';\r\n\r\nconst { Option } = Select\r\n\r\nconst mapStateToProps = ({ cutting }) => ({\r\n  newCuttingId: cutting.newCuttingId,\r\n  cuttingData: cutting.cuttingData,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generateCuttingId: () => {\r\n      dispatch({\r\n        type: 'cutting/GENERATE_CUTTING_ID',\r\n      })\r\n    },\r\n    getCuttingData: () => {\r\n      dispatch({\r\n        type: 'cutting/GET_DATA',\r\n      })\r\n    },\r\n    processCutting: (payload) => {\r\n      dispatch({\r\n        type: 'cutting/PROCESS_CUTTING',\r\n        payload,\r\n      })\r\n    },\r\n  }\r\n}\r\n\r\nclass ProcessCutting extends React.Component {\r\n  state = {\r\n    productionIdSelectOption: null,\r\n    formProductionIdHideToggle: null,\r\n    outputItemSelectOption: null,\r\n    inputItemSelectOption: null,\r\n    outputItemList: null,\r\n    inputQuantityVolumeMeasurementUnit: null,\r\n    outputQuantityVolumeMeasurementUnit: null,\r\n    isInputQuantityWeightDisabled: null,\r\n    isInputQuantityVolumeDisabled: null,\r\n  }\r\n\r\n  formRefInput = React.createRef()\r\n\r\n  formRefOutput = React.createRef()\r\n\r\n  // const productionIdSelectOption = (\r\n  //   <Option key=\"inputItem\" disabled={isInputDisabled}>input items</Option>\r\n  // );\r\n\r\n  // if(Object.keys(cuttingData).length > 0)\r\n  // {\r\n  //   productionIdSelectOption = cuttingData.supplyList.map(o => (\r\n  //     <Option value={o.production_id} key={o.production_id}>{o.production_id}</Option>\r\n  //   ));\r\n  // }\r\n\r\n  componentDidMount() {\r\n    const { generateCuttingId, getCuttingData }= this.props;\r\n    generateCuttingId();\r\n    getCuttingData();\r\n  }\r\n\r\n\r\n  onItemSourceChange = (event) => {\r\n    const { cuttingData }= this.props;\r\n\r\n    this.formRefOutput.current.setFieldsValue({\r\n      outputItemName: undefined,\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n    });\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      productionId: undefined,\r\n      inputQuantityWeight: undefined,\r\n      inputQuantityVolume: undefined,\r\n      itemName:undefined,\r\n    });\r\n\r\n    if(event === \"production\")\r\n    {\r\n      const inputDataBuffer = cuttingData.supplyList.map(o => (\r\n        <Option value={o.production_id} key={o.production_id}>{o.production_id}</Option>\r\n      ))\r\n\r\n      this.setState({\r\n        formProductionIdHideToggle: false,\r\n        productionIdSelectOption: inputDataBuffer,\r\n        inputItemSelectOption: [],\r\n        outputItemList: [],\r\n        outputItemSelectOption: [],\r\n        outputQuantityVolumeMeasurementUnit: \"Ekor\",\r\n        isInputQuantityWeightDisabled: true,\r\n        isInputQuantityVolumeDisabled: true,\r\n      })\r\n    }\r\n    else\r\n    {\r\n      this.setState({\r\n        formProductionIdHideToggle: true,\r\n        outputItemList: [],\r\n        outputItemSelectOption: [],\r\n      }) \r\n\r\n      const inputItemNameList = cuttingData.stockList.filter(data => {\r\n        return data.group === \"whole\" && data.is_input === true\r\n      })\r\n\r\n      const inputItemDataBuffer = inputItemNameList.map(o => (\r\n        <Option value={o.item_name} key={o.item_name}>{o.item_name}</Option>\r\n      ))\r\n\r\n      this.setState({\r\n        inputItemSelectOption: inputItemDataBuffer,\r\n        outputQuantityVolumeMeasurementUnit: \"Pax\",\r\n        isInputQuantityWeightDisabled: false,\r\n        isInputQuantityVolumeDisabled: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  onProductionIdChange = (event) => {\r\n    const { cuttingData }= this.props;\r\n\r\n    const outputItemNameList = cuttingData.itemList.filter(data => {\r\n      return data.group === \"whole\"\r\n    })\r\n\r\n    const outputItemDataBuffer = outputItemNameList.map(o => (\r\n      <Option value={o.name} key={o.name}>{o.name}</Option>\r\n    ))\r\n\r\n    this.setState({\r\n      inputItemSelectOption: [],\r\n      outputItemSelectOption: outputItemDataBuffer,\r\n      outputItemList: [],\r\n    })\r\n\r\n    const inputItemList = cuttingData.supplyList.filter(data => {\r\n      return data.production_id === event\r\n    })\r\n    \r\n    const inputItemDataBuffer = inputItemList.map(o => (\r\n      <Option value={o.item_name} key={o.item_name}>{o.item_name}</Option>\r\n    ))\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      itemName: inputItemList[0].item_name,\r\n      inputQuantityWeight: inputItemList[0].quantity_weight,\r\n      inputQuantityVolume: inputItemList[0].quantity_volume,\r\n    });\r\n\r\n    this.formRefOutput.current.setFieldsValue({\r\n      outputItemName: undefined,\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n    });\r\n\r\n    this.setState({\r\n      inputItemSelectOption: inputItemDataBuffer,\r\n    })\r\n  }\r\n\r\n  onInputItemChange = (event) => {\r\n    const { cuttingData }= this.props;\r\n    let inputQuantityVolumeMeasurementUnit = \"Ekor\";\r\n\r\n    const inputItemList = cuttingData.stockList.filter(data => {\r\n      return data.item_name === event\r\n    })\r\n    console.log(\"inputitem list\", inputItemList);\r\n    let itemGroup = \"whole\";\r\n\r\n    if (inputItemList[0].group === \"whole\")\r\n    {\r\n      inputQuantityVolumeMeasurementUnit = inputItemList[0].type === \"main\" ? inputQuantityVolumeMeasurementUnit : \"Pax\"; \r\n      itemGroup = \"pieces\";\r\n\r\n      this.formRefInput.current.setFieldsValue({\r\n        inputQuantityWeight: inputItemList[0].quantity_weight,\r\n        inputQuantityVolume: inputItemList[0].quantity_volume,\r\n      });\r\n    }\r\n    \r\n    const outputItemNameList = cuttingData.itemList.filter(data => {\r\n      return data.group === itemGroup\r\n    })\r\n\r\n    const outputItemDataBuffer = outputItemNameList.map(o => (\r\n      <Option value={o.name} key={o.name}>{o.name}</Option>\r\n    ))\r\n\r\n    this.setState({\r\n      outputItemSelectOption: outputItemDataBuffer,\r\n      outputItemList: [],\r\n      inputQuantityVolumeMeasurementUnit,\r\n    })\r\n\r\n    this.formRefOutput.current.setFieldsValue({\r\n      outputItemName: undefined,\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n    });\r\n  }\r\n\r\n  onOutputItemChange = (event) => {\r\n    const { cuttingData } = this.props;\r\n    let { outputQuantityVolumeMeasurementUnit } = this.state;\r\n\r\n    const outputItemData = cuttingData.itemList.filter(data => {\r\n      return data.name === event\r\n    })\r\n\r\n    if (outputItemData[0].group === \"whole\")\r\n    {\r\n      outputQuantityVolumeMeasurementUnit = outputItemData[0].type === \"main\" ? \"Ekor\" : outputQuantityVolumeMeasurementUnit;\r\n    }    \r\n\r\n    this.formRefOutput.current.setFieldsValue({\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n    });\r\n\r\n    this.setState({\r\n      outputQuantityVolumeMeasurementUnit,\r\n    })\r\n  }\r\n\r\n  onButtonAddClick = () => {\r\n    const { newCuttingId }= this.props;\r\n\r\n    const { outputItemList } = this.state;\r\n\r\n    if( outputItemList === null || outputItemList.length < 1)\r\n    {\r\n      notification.error({\r\n        message: 'Please fill required data'\r\n      })\r\n      return;\r\n    }\r\n\r\n    const { itemName, inputQuantityWeight, inputQuantityVolume } = this.formRefInput.current.getFieldsValue();\r\n    let { productionId } = this.formRefInput.current.getFieldsValue();\r\n    productionId = productionId === undefined ? \"\" : productionId;\r\n\r\n    const payload = \r\n      {\r\n        cuttingId: newCuttingId,\r\n        itemInput: itemName,\r\n        inputQuantityWeight,\r\n        inputQuantityVolume,\r\n        itemOutput: outputItemList,\r\n        referenceId: productionId\r\n      }      \r\n\r\n    const { processCutting } = this.props;\r\n\r\n    // send cutting data to backend\r\n    processCutting(payload);\r\n  }\r\n\r\n  onFinish = values => {\r\n    let { outputItemList } = this.state;\r\n    this.setState({\r\n      outputItemList: [],\r\n    })\r\n    let keyId = 1;\r\n    if(outputItemList === null)\r\n    {\r\n      outputItemList = []\r\n    }\r\n    else if (outputItemList.length > 0)\r\n    {\r\n      keyId = outputItemList[outputItemList.length-1].key + 1;\r\n    }\r\n    outputItemList.push({\r\n      key: keyId,\r\n      name: values.outputItemName,\r\n      quantityWeight: values.quantityWeight,\r\n      quantityVolume: values.quantityVolume,\r\n    })\r\n\r\n    this.setState({\r\n      outputItemList,\r\n    })\r\n\r\n    this.formRefOutput.current.setFieldsValue({\r\n      outputItemName: undefined,\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Nama Item',\r\n        width: 100,\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Quantity (kg)',\r\n        width: 100,\r\n        dataIndex: 'quantityWeight',\r\n        key: 'quantityWeight',\r\n      },\r\n      {\r\n        title: 'Quantity (Ekor / Pax)',\r\n        width: 100,\r\n        dataIndex: 'quantityVolume',\r\n        key: 'quantityVolume',\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'operation',\r\n        fixed: 'right',\r\n        width: 60,\r\n        render: () => <a>Delete</a>,\r\n      },\r\n    ]\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    }\r\n\r\n    const { newCuttingId, cuttingData }= this.props;\r\n\r\n    const fullDate = new Date();\r\n    const today = fullDate.toLocaleDateString(\"en-US\")\r\n    const isInputDisabled = true;\r\n\r\n    if(Object.keys(cuttingData).length > 0)\r\n    {\r\n      const result = cuttingData.itemList.filter(data => {\r\n        return data.group === \"whole\"\r\n      })\r\n      // console.log('cutting', cuttingData.supplyList[0].production_id);\r\n      console.log('itemList', result);\r\n    }\r\n\r\n    let { \r\n        inputItemSelectOption, \r\n        outputItemSelectOption,\r\n        productionIdSelectOption, \r\n        formProductionIdHideToggle,\r\n        outputItemList,\r\n        inputQuantityVolumeMeasurementUnit,\r\n        outputQuantityVolumeMeasurementUnit,\r\n        isInputQuantityWeightDisabled,\r\n        isInputQuantityVolumeDisabled,\r\n       } = this.state\r\n    // Populate Input item list\r\n    inputItemSelectOption = inputItemSelectOption || [];\r\n\r\n    // Populate Output item list\r\n    outputItemSelectOption = outputItemSelectOption || [];\r\n\r\n    // Populate Production Id  list\r\n    productionIdSelectOption = productionIdSelectOption || [];\r\n\r\n    formProductionIdHideToggle = formProductionIdHideToggle === null ? true : formProductionIdHideToggle;\r\n\r\n    isInputQuantityWeightDisabled = isInputQuantityWeightDisabled === null ? true : isInputQuantityWeightDisabled;\r\n    isInputQuantityVolumeDisabled = isInputQuantityVolumeDisabled === null ? true : isInputQuantityVolumeDisabled;\r\n\r\n    outputItemList = outputItemList || [];\r\n\r\n    inputQuantityVolumeMeasurementUnit = inputQuantityVolumeMeasurementUnit || \"Ekor\";\r\n    outputQuantityVolumeMeasurementUnit = outputQuantityVolumeMeasurementUnit || \"Ekor\";\r\n\r\n    return (\r\n      <div>\r\n        <Helmet title=\"Input / Pengajuan\" />\r\n        <div className=\"kit__utils__heading\">\r\n          <h5>Input pengajuan</h5>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form \r\n              {...formItemLayout} \r\n              ref={this.formRefInput}\r\n              labelAlign=\"left\"\r\n            >\r\n              <Form.Item name=\"cuttingId\" label=\"Kode Cutting\">\r\n                <Input placeholder={newCuttingId} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item name=\"dateToday\" label=\"Tanggal\">\r\n                <Input placeholder={today} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <div className=\"kit__utils__heading\">\r\n                <h5>Asal Item Produksi</h5>\r\n              </div>\r\n              <Form.Item id=\"itemSource\" name=\"itemSource\" label=\"Asal Item\" rules={[{ required: true, message: 'Asal Item harus dipilih' }]}>\r\n                <Select onChange={this.onItemSourceChange} placeholder=\"Pilih asal item\">\r\n                  <Option value=\"production\" key=\"production\">Pengajuan</Option>\r\n                  <Option value=\"freshWarehouse\" key=\"freshWarehouse\">Stok fresh</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item id=\"productionId\" name=\"productionId\" label=\"Kode produksi\" rules={[{ required: true, message: 'Item harus dipilih' }]} style={formProductionIdHideToggle === true ? { display: 'none'} : { display: ''}}>\r\n                <Select onChange={this.onProductionIdChange} placeholder=\"Pilih Kode Produksi\">\r\n                  {productionIdSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item id=\"itemName\" name=\"itemName\" label=\"Nama Item\" rules={[{ required: true, message: 'Item harus dipilih' }]}>\r\n                <Select onChange={this.onInputItemChange} placeholder=\"Pilih item\">\r\n                  {inputItemSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"inputQuantityWeight\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" disabled={isInputQuantityWeightDisabled} placeholder=\"Masukkan quantity\" addonAfter=\"kg\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"inputQuantityVolume\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" disabled={isInputQuantityVolumeDisabled} placeholder=\"Masukkan quantity\" addonAfter={inputQuantityVolumeMeasurementUnit} />\r\n              </Form.Item>\r\n            </Form>\r\n            <Form \r\n              {...formItemLayout}\r\n              ref={this.formRefOutput}\r\n              labelAlign=\"left\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <div className=\"kit__utils__heading\">\r\n                <h5>Hasil Produksi</h5>\r\n              </div>\r\n              <Form.Item id=\"outputItemName\" name=\"outputItemName\" label=\"Nama Item\" rules={[{ required: true, message: 'Item harus dipilih' }]}>\r\n                <Select onChange={this.onOutputItemChange} placeholder=\"Pilih item\">\r\n                  {outputItemSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"quantityWeight\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter=\"kg\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"quantityVolume\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter={outputQuantityVolumeMeasurementUnit} />\r\n              </Form.Item>\r\n              <button type=\"submit\" className=\"btn btn-success\">\r\n                Tambah Hasil Produksi\r\n              </button>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <div className=\"mb-4 kit__utils__scrollTable\">\r\n                <Table columns={columns} dataSource={outputItemList} scroll={{ x: 1500, y: 300 }} />\r\n              </div>\r\n            </Form>\r\n            <Link to=\"/\" className=\"kit__utils__link font-size-16\">\r\n              <i className=\"fe fe-arrow-left mr-1 align-middle\" />\r\n              Kembali\r\n            </Link>\r\n            <Button onClick={this.onButtonAddClick} className=\"float-right\" style={{backgroundColor: \"#55c392\"}}>\r\n              Proses\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessCutting);\r\n"],"sourceRoot":""}