{"version":3,"sources":["pages/production/expense/form/expenseDetail/index.js","pages/production/expense/form/main/index.js","pages/production/expense/index.js"],"names":["TableexpenseDetail","columns","title","dataIndex","key","this","props","expenseDetail","recordId","length","expenseDetailInId","filter","data","id","forEach","item","i","dataSource","React","Component","TableExpenseData","state","searchText","sortedInfo","expandedRow","handleChange","pagination","filters","sorter","console","log","setState","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","type","onClick","icon","SearchOutlined","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","getExpenseData","resetExpenseData","a","b","replace","sortOrder","columnKey","order","createdOn","totalExpenseCutting","totalExpenseFreeze","totalExpenseThawing","createdBy","expenseData","flags","expenseDataId","push","expenseDataSummary","expenseDataInId","expense_type","total_amount","objBuffer","created_on","created_by","className","onExpand","isExpanded","expandedRowRender","expandedRowKeys","expandRowByClick","scroll","x","y","connect","expense","dispatch","payload","Purchase","Helmet"],"mappings":"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","file":"static/js/29.2824677b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\n\r\nclass TableexpenseDetail extends React.Component {\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Tipe Biaya',\r\n        dataIndex: 'expense_type',\r\n        key: 'expense_type',\r\n      },\r\n      {\r\n        title: 'Nama Biaya',\r\n        dataIndex: 'expense_name',\r\n        key: 'expense_name',\r\n      },\r\n      {\r\n        title: 'Satuan',\r\n        dataIndex: 'measurement_unit_name',\r\n        key: 'measurement_unit_name',\r\n      },\r\n      {\r\n        title: 'Jumlah',\r\n        dataIndex: 'quantity',\r\n        key: 'quantity',\r\n      },\r\n      {\r\n        title: 'Harga',\r\n        dataIndex: 'unit_amount',\r\n        key: 'unit_amount',\r\n      },\r\n      {\r\n        title: 'Total',\r\n        dataIndex: 'total_amount',\r\n        key: 'total_amount',\r\n      },\r\n    ]\r\n\r\n    const { expenseDetail, recordId }= this.props;\r\n\r\n    if (expenseDetail.length > 0)\r\n    {\r\n      const expenseDetailInId = expenseDetail.filter(data => {\r\n        return data.id === recordId\r\n      })\r\n      // Add key to each index so it will be unique\r\n      expenseDetailInId.forEach((item, i) => {\r\n        item.key = i + 1;\r\n      });\r\n\r\n      return (\r\n        <div>\r\n          <Table columns={columns} dataSource={expenseDetailInId} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Table columns={columns} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableexpenseDetail;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport Highlighter from 'react-highlight-words'\r\nimport { Table, Input, Button } from 'antd';\r\nimport TableExpenseDataDetail from '../expenseDetail';\r\n\r\nconst mapStateToProps = ({ expense }) => ({\r\n  expenseData: expense.expenseData,\r\n  expenseDetail: expense.expenseDetail,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getExpenseData: () => dispatch({ type: 'expense/GET_DATA' }),\r\n    resetExpenseData: () => dispatch({ \r\n      type: 'expense/SET_STATE',\r\n      payload: {\r\n        expenseData: [],          \r\n      },\r\n    }),\r\n  }\r\n}\r\n\r\nclass TableExpenseData extends React.Component {\r\n\r\n  state = {\r\n    searchText: '',\r\n    sortedInfo: null,\r\n    expandedRow: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getExpenseData , resetExpenseData }= this.props;\r\n    resetExpenseData();\r\n    getExpenseData();\r\n  }\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(sorter);\r\n    // console.log('Various parameters', pagination, filters, sorter)\r\n    this.setState({\r\n      sortedInfo: sorter,\r\n    })\r\n  }\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node\r\n          }}\r\n          // placeholder={`Search ${dataIndex}`}\r\n          placeholder='Cari'\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n          icon={<SearchOutlined />}\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) => {\r\n      record[dataIndex] = record[dataIndex] === null ? \"\" : record[dataIndex];\r\n      return record[dataIndex]\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(value.toLowerCase())\r\n    },\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select())\r\n      }\r\n    },\r\n    render: text => {\r\n      const { searchText } = this.state\r\n      text = text === null ? \"\" : text;\r\n\r\n      return (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      )\r\n    },\r\n  })\r\n\r\n  handleSearch = (selectedKeys, confirm) => {\r\n    confirm()\r\n    this.setState({ searchText: selectedKeys[0] })\r\n  }\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters()\r\n    this.setState({ searchText: '' })\r\n  }\r\n\r\n  render() {\r\n    let { sortedInfo, expandedRow } = this.state\r\n\r\n    sortedInfo = sortedInfo || {};\r\n    expandedRow = expandedRow || [];\r\n    \r\n    const columns = [\r\n      {\r\n        title: 'id',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        ...this.getColumnSearchProps('id'),\r\n        sorter: (a, b) => a.id.replace(/-/g, '') - b.id.replace(/-/g, ''),\r\n        sortOrder: sortedInfo.columnKey === 'id' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Tanggal',\r\n        width: 250,\r\n        dataIndex: 'createdOn',\r\n        key: 'createdOn',\r\n        ...this.getColumnSearchProps('createdOn'),\r\n        sorter: (a, b) => a.createdOn.replace(/-|:| |\\./g, '') - b.createdOn.replace(/-|:| |\\./g, ''),\r\n        sortOrder: sortedInfo.columnKey === 'createdOn' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Total Biaya Cutting',\r\n        dataIndex: 'totalExpenseCutting',\r\n        key: 'totalExpenseCutting',\r\n        // render: text => <span>{`Rp ${text}`}</span>,\r\n        ...this.getColumnSearchProps('totalExpenseCutting'),\r\n        sorter: (a, b) => a.totalExpenseCutting - b.totalExpenseCutting,\r\n        sortOrder: sortedInfo.columnKey === 'totalExpenseCutting' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Total Biaya Freeze',\r\n        dataIndex: 'totalExpenseFreeze',\r\n        key: 'totalExpenseFreeze',\r\n        // render: text => <span>{`Rp ${text}`}</span>,\r\n        ...this.getColumnSearchProps('totalExpenseFreeze'),\r\n        sorter: (a, b) => a.totalExpenseFreeze - b.totalExpenseFreeze,\r\n        sortOrder: sortedInfo.columnKey === 'totalExpenseFreeze' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Total Biaya Thawing',\r\n        dataIndex: 'totalExpenseThawing',\r\n        key: 'totalExpenseThawing',\r\n        // render: text => <span>{`Rp ${text}`}</span>,\r\n        ...this.getColumnSearchProps('totalExpenseThawing'),\r\n        sorter: (a, b) => a.totalExpenseThawing - b.totalExpenseThawing,\r\n        sortOrder: sortedInfo.columnKey === 'totalExpenseThawing' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Created By',\r\n        dataIndex: 'createdBy',\r\n        key: 'createdBy',\r\n        ...this.getColumnSearchProps('createdBy'),\r\n        sorter: (a, b) => a.createdBy.length - b.createdBy.length,\r\n        sortOrder: sortedInfo.columnKey === 'createdBy' && sortedInfo.order,\r\n      },\r\n    ]\r\n    const { expenseData } = this.props;\r\n\r\n    if (expenseData.length > 0)\r\n    {\r\n      const flags = [];\r\n      const expenseDataId = [];\r\n      expenseData.forEach((item) => {\r\n        if(!flags[item.id]){\r\n          flags[item.id] = true;\r\n          expenseDataId.push(item.id);\r\n        }\r\n      })\r\n\r\n      const expenseDataSummary = [];\r\n      let i = 0;\r\n      expenseDataId.forEach((id) => {\r\n        const expenseDataInId = expenseData.filter(data => {\r\n          return data.id === id \r\n        })\r\n\r\n        let totalExpenseCutting = 0;\r\n        let totalExpenseFreeze = 0;\r\n        let totalExpenseThawing = 0;\r\n        expenseDataInId.forEach((item) => {\r\n          if(item.expense_type === \"cutting\")\r\n          {\r\n            totalExpenseCutting += item.total_amount\r\n          }\r\n\r\n          if(item.expense_type === \"freeze\")\r\n          {\r\n            totalExpenseFreeze += item.total_amount\r\n          }\r\n\r\n          if(item.expense_type === \"thawing\")\r\n          {\r\n            totalExpenseThawing += item.total_amount\r\n          }\r\n        })\r\n\r\n        const objBuffer = {};\r\n        objBuffer.key = i;\r\n        objBuffer.id = expenseDataInId[0].id;\r\n        objBuffer.createdOn = expenseDataInId[0].created_on;\r\n        objBuffer.createdBy = expenseDataInId[0].created_by;\r\n        objBuffer.totalExpenseCutting = totalExpenseCutting;\r\n        objBuffer.totalExpenseFreeze = totalExpenseFreeze;\r\n        objBuffer.totalExpenseThawing = totalExpenseThawing;\r\n        expenseDataSummary.push(objBuffer);\r\n        \r\n        i += 1;\r\n      });\r\n\r\n      return (\r\n        <div className=\"text-nowrap\">\r\n          <Table \r\n            columns={columns} \r\n            dataSource={expenseDataSummary} \r\n            onChange={this.handleChange} \r\n            onExpand={(isExpanded, record) => {\r\n              this.setState({ \r\n                expandedRow: isExpanded ? [record.key] : undefined });\r\n              }\r\n            }\r\n            expandedRowRender={(record) => (\r\n              <TableExpenseDataDetail \r\n                expenseDetail={expenseData}\r\n                recordId={record.id}\r\n              />\r\n            )}\r\n            expandedRowKeys={expandedRow}\r\n            expandRowByClick=\"true\"\r\n            scroll={{ x: 1500, y: 300 }} \r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"text-nowrap\">\r\n        <Table columns={columns} scroll={{ x: 1500, y: 300 }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableExpenseData);","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport TableExpenseRecap from './form/main';\r\n\r\nconst Purchase = () => {\r\n  return (\r\n    <div>\r\n      <Helmet title=\"Rekap / Biaya / Produksi\" />\r\n      <div className=\"kit__utils__heading\">\r\n        <h5>\r\n          <span className=\"mr-3\">Rekap Biaya Produksi</span>\r\n        </h5>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <TableExpenseRecap />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Purchase\r\n"],"sourceRoot":""}