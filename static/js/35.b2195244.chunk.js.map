{"version":3,"sources":["pages/storage/fresh/form/stockOut/index.js"],"names":["Option","Select","DeliverItem","state","transactionIdSelectOption","orderDetails","customer","totalQuantityWeight","totalQuantityVolume","orderDetailsForPayload","formRefInput","React","createRef","onTransactionIdChange","event","itemsToBeDelivered","props","setState","pendingTransactionData","filter","data","ref_id","forEach","item","i","objBuffer","name","item_name","isFrozen","is_frozen","isThawed","is_thawed","quantityWeight","quantity_weight","quantityVolume","quantity_volume","push","key","item_name_fresh","is_item_thawing","parseInt","current","setFieldsValue","onButtonAddClick","deliveryId","transactionId","getFieldsValue","length","notification","error","message","payload","id","storageSource","items","deliverItem","this","generateDeliveryId","getPendingTransaction","today","Date","toLocaleDateString","Object","keys","pendingTransactionId","map","o","value","title","className","labelCol","xs","span","sm","wrapperCol","ref","labelAlign","onFinish","Item","label","placeholder","disabled","onChange","columns","width","dataIndex","dataSource","to","onClick","Component","connect","storage","dispatch","type"],"mappings":"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","file":"static/js/35.b2195244.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Table, Input, Select, Form, Button, notification } from 'antd';\r\n\r\nconst { Option } = Select\r\n\r\nconst mapStateToProps = ({ storage }) => ({\r\n  deliveryId: storage.deliveryId,\r\n  itemsToBeDelivered: storage.itemsToBeDelivered,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generateDeliveryId: () => {\r\n      dispatch({\r\n        type: 'storage/GENERATE_DELIVERY_ID',\r\n        payload: {\r\n          storageSource: 'fresh',\r\n        }\r\n      })\r\n    },\r\n    getPendingTransaction: () => {\r\n      dispatch({\r\n        type: 'storage/GET_PENDING_TRANSACTION',\r\n        payload: {\r\n          storageSource: 'fresh',\r\n        }\r\n      })\r\n    },\r\n    deliverItem: (payload) => {\r\n      dispatch({\r\n        type: 'storage/DELIVER_ITEM',\r\n        payload,\r\n      })\r\n    },\r\n  }\r\n}\r\n\r\nclass DeliverItem extends React.Component {\r\n  state = {\r\n    transactionIdSelectOption: null,\r\n    orderDetails: null,\r\n    customer: null,\r\n    totalQuantityWeight: null,\r\n    totalQuantityVolume: null,\r\n    orderDetailsForPayload: [],\r\n  }\r\n\r\n  formRefInput = React.createRef();\r\n\r\n  componentDidMount() {\r\n    const { generateDeliveryId, getPendingTransaction }= this.props;\r\n    generateDeliveryId();\r\n    getPendingTransaction();\r\n  }\r\n\r\n  onTransactionIdChange = (event) => {\r\n    const { itemsToBeDelivered }= this.props;\r\n    let orderDetails = [];\r\n    let totalQuantityWeight = 0;\r\n    let totalQuantityVolume = 0;\r\n\r\n    this.setState({\r\n      orderDetails,\r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n      orderDetailsForPayload: [],\r\n    })\r\n\r\n    orderDetails = itemsToBeDelivered.pendingTransactionData.filter(data => {\r\n      return data.ref_id === event\r\n    })\r\n\r\n    const orderDetailsForPayload = [];\r\n    orderDetails.forEach((item, i) => {\r\n      // Set order details for deliverItem payload\r\n      const objBuffer = {};\r\n      objBuffer.name = item.item_name;\r\n      objBuffer.isFrozen = item.is_frozen;\r\n      objBuffer.isThawed = item.is_thawed;\r\n      objBuffer.quantityWeight = item.quantity_weight;\r\n      objBuffer.quantityVolume = item.quantity_volume;\r\n      orderDetailsForPayload.push(objBuffer);\r\n\r\n      // Add key to each index so it will be unique\r\n      item.key = i + 1;\r\n\r\n      // add FRESH in front of item name\r\n      item.item_name_fresh = `FRESH ${item.item_name}`;\r\n\r\n      item.is_item_thawing = item.is_thawed === true ? \"Iya\" : \"Tidak\";\r\n\r\n      // Calculate the total quantity of all item\r\n      totalQuantityWeight += parseInt(item.quantity_weight, 10);\r\n      totalQuantityVolume += parseInt(item.quantity_volume, 10);\r\n    });\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      customer: orderDetails[0].customer,\r\n    });\r\n\r\n    this.setState({\r\n      orderDetails,\r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n      orderDetailsForPayload,\r\n    })\r\n  }\r\n\r\n  onButtonAddClick = () => {\r\n    const { deliveryId } = this.props;\r\n\r\n    const { \r\n      transactionId\r\n    } = this.formRefInput.current.getFieldsValue();\r\n\r\n    const { \r\n      orderDetails,\r\n      orderDetailsForPayload\r\n    } = this.state;\r\n\r\n    if( orderDetails === null || orderDetails.length < 1)\r\n    {\r\n      notification.error({\r\n        message: 'Silahkan pilih kode invoice'\r\n      })\r\n      return;\r\n    }\r\n\r\n    const payload = \r\n      {\r\n        id: deliveryId,\r\n        transactionId,\r\n        storageSource: \"fresh\",\r\n        items: orderDetailsForPayload,\r\n      }      \r\n\r\n    const { deliverItem } = this.props;\r\n\r\n    // send data to backend\r\n    deliverItem(payload);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Nama Item',\r\n        width: 100,\r\n        dataIndex: 'item_name_fresh',\r\n        key: 'item_name_fresh',\r\n      },\r\n      {\r\n        title: 'Item Hasil Thawing',\r\n        width: 100,\r\n        dataIndex: 'is_item_thawing',\r\n        key: 'is_item_thawing',\r\n      },\r\n      {\r\n        title: 'Qty (kg)',\r\n        width: 100,\r\n        dataIndex: 'quantity_weight',\r\n        key: 'quantity_weight',\r\n      },\r\n      {\r\n        title: 'Qty (Ekor/Pax)',\r\n        width: 100,\r\n        dataIndex: 'quantity_volume',\r\n        key: 'quantity_volume',\r\n      },\r\n    ]\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    }\r\n\r\n    const { deliveryId, itemsToBeDelivered }= this.props;\r\n\r\n    const fullDate = new Date();\r\n    const today = fullDate.toLocaleDateString(\"en-US\")\r\n    const isInputDisabled = true;\r\n\r\n    let { \r\n        transactionIdSelectOption, \r\n        customer,\r\n        orderDetails,\r\n        totalQuantityWeight,\r\n        totalQuantityVolume,\r\n       } = this.state\r\n\r\n\r\n    transactionIdSelectOption = transactionIdSelectOption || [];\r\n\r\n    orderDetails = orderDetails || [];\r\n\r\n    totalQuantityWeight = totalQuantityWeight || 0;\r\n    totalQuantityVolume = totalQuantityVolume || 0;\r\n    customer = customer || \"\";\r\n\r\n    if(Object.keys(itemsToBeDelivered).length > 0)\r\n    {\r\n      // Populate invoice id list\r\n      transactionIdSelectOption = itemsToBeDelivered.pendingTransactionId.map(o => (\r\n        <Option value={o} key={o}>{o}</Option>\r\n      ))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Helmet title=\"Stock / Out\" />\r\n        <div className=\"kit__utils__heading\">\r\n          <h5>Stok Keluar</h5>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form \r\n              {...formItemLayout} \r\n              ref={this.formRefInput}\r\n              labelAlign=\"left\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Form.Item name=\"deliveryId\" label=\"Nomor Surat Jalan\">\r\n                <Input placeholder={deliveryId} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item name=\"dateToday\" label=\"Tanggal\">\r\n                <Input placeholder={today} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item id=\"transactionId\" name=\"transactionId\" label=\"Kode Invoice\">\r\n                <Select onChange={this.onTransactionIdChange} placeholder=\"Pilih kode invoice\">\r\n                  {transactionIdSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"customer\" label=\"Pembeli\">\r\n                <Input placeholder={customer} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <div className=\"mb-4 kit__utils__scrollTable\">\r\n                <Table columns={columns} dataSource={orderDetails} />\r\n              </div>\r\n            </Form>\r\n            <div className=\"border-top text-dark font-size-18 pt-4\">\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (kg): <strong className=\"font-size-24\">{totalQuantityWeight}</strong>\r\n              </p>\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (Ekor/Pax): <strong className=\"font-size-24\">{totalQuantityVolume}</strong>\r\n              </p>\r\n              <Link to=\"/storage/fresh\" className=\"kit__utils__link font-size-16\">\r\n                <i className=\"fe fe-arrow-left mr-1 align-middle\" />\r\n                Kembali\r\n              </Link>\r\n              <Button onClick={this.onButtonAddClick} className=\"btn btn-lg btn-success width-200 mb-2 float-right\">\r\n                Proses\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeliverItem);\r\n"],"sourceRoot":""}