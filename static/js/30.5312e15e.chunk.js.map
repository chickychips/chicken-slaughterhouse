{"version":3,"sources":["pages/production/freeze/index.js"],"names":["ProcessFreeze","state","totalQuantityWeight","totalQuantityVolume","freezeDataDetails","formRefInput","React","createRef","onButtonAddClick","props","newFreezeId","freezeData","length","notification","error","message","payload","freezeId","items","processFreeze","this","generateFreezeId","getFreezeData","today","Date","toLocaleDateString","console","log","forEach","item","i","key","item_name_fresh","item_name","parseInt","quantity_weight","quantity_volume","title","className","labelCol","xs","span","sm","wrapperCol","ref","labelAlign","onFinish","Item","name","label","placeholder","disabled","columns","width","dataIndex","dataSource","to","onClick","Component","connect","freeze","dispatch","type"],"mappings":"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","file":"static/js/30.5312e15e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Table, Input, Form, Button, notification } from 'antd';\r\n\r\nconst mapStateToProps = ({ freeze }) => ({\r\n  newFreezeId: freeze.newFreezeId,\r\n  freezeData: freeze.freezeData,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generateFreezeId: () => {\r\n      dispatch({\r\n        type: 'freeze/GENERATE_FREEZE_ID',\r\n      })\r\n    },\r\n    getFreezeData: () => {\r\n      dispatch({\r\n        type: 'freeze/GET_DATA'\r\n      })\r\n    },\r\n    processFreeze: (payload) => {\r\n      dispatch({\r\n        type: 'freeze/PROCESS_FREEZE',\r\n        payload,\r\n      })\r\n    },\r\n  }\r\n}\r\n\r\nclass ProcessFreeze extends React.Component {\r\n  state = {\r\n    totalQuantityWeight: null,\r\n    totalQuantityVolume: null,\r\n    freezeDataDetails: null,\r\n  }\r\n\r\n  formRefInput = React.createRef();\r\n\r\n  componentDidMount() {\r\n    const { generateFreezeId, getFreezeData }= this.props;\r\n    generateFreezeId();\r\n    getFreezeData();\r\n  }\r\n\r\n  onButtonAddClick = () => {\r\n    const { newFreezeId, freezeData } = this.props;\r\n    \r\n    if( freezeData === null || freezeData.length < 1)\r\n    {\r\n      notification.error({\r\n        message: 'Tidak ada item yang perlu di freeze'\r\n      })\r\n      return;\r\n    }\r\n\r\n    const payload = \r\n      {\r\n        freezeId: newFreezeId,\r\n        items: freezeData,\r\n      }      \r\n\r\n    const { processFreeze } = this.props;\r\n\r\n    // send data to backend\r\n    processFreeze(payload);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Nama Item',\r\n        width: 100,\r\n        dataIndex: 'item_name_fresh',\r\n        key: 'item_name_fresh',\r\n      },\r\n      {\r\n        title: 'Qty (kg)',\r\n        width: 100,\r\n        dataIndex: 'quantity_weight',\r\n        key: 'quantity_weight',\r\n      },\r\n      {\r\n        title: 'Qty (Ekor/Pax)',\r\n        width: 100,\r\n        dataIndex: 'quantity_volume',\r\n        key: 'quantity_volume',\r\n      },\r\n    ]\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    }\r\n\r\n    const { newFreezeId, freezeData }= this.props;\r\n\r\n    const fullDate = new Date();\r\n    const today = fullDate.toLocaleDateString(\"en-US\")\r\n    const isInputDisabled = true;\r\n\r\n    let { \r\n        totalQuantityWeight,\r\n        totalQuantityVolume,\r\n        freezeDataDetails,\r\n       } = this.state\r\n\r\n    freezeDataDetails = freezeDataDetails || [];\r\n    totalQuantityWeight = totalQuantityWeight || 0;\r\n    totalQuantityVolume = totalQuantityVolume || 0;\r\n\r\n    console.log('freezeData', freezeData);\r\n    if(freezeData.length > 0)\r\n    {\r\n\r\n      freezeData.forEach((item, i) => {\r\n        // Add key to each index so it will be unique\r\n        item.key = i + 1;\r\n\r\n        // add fresh in front of item name\r\n        item.item_name_fresh = `FRESH ${item.item_name}`;\r\n\r\n        // Calculate the total quantity of all item\r\n        totalQuantityWeight += parseInt(item.quantity_weight, 10);\r\n        totalQuantityVolume += parseInt(item.quantity_volume, 10);\r\n      });\r\n\r\n      freezeDataDetails = freezeData;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Helmet title=\"Process / freeze\" />\r\n        <div className=\"kit__utils__heading\">\r\n          <h5>Proses Freeze</h5>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form \r\n              {...formItemLayout} \r\n              ref={this.formRefInput}\r\n              labelAlign=\"left\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Form.Item name=\"newFreezeId\" label=\"Kode freeze\">\r\n                <Input placeholder={newFreezeId} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item name=\"dateToday\" label=\"Tanggal\">\r\n                <Input placeholder={today} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <div className=\"mb-4 kit__utils__scrollTable\">\r\n                <Table columns={columns} dataSource={freezeDataDetails} />\r\n              </div>\r\n            </Form>\r\n            <div className=\"border-top text-dark font-size-18 pt-4\">\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (kg): <strong className=\"font-size-24\">{totalQuantityWeight}</strong>\r\n              </p>\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (Ekor/Pax): <strong className=\"font-size-24\">{totalQuantityVolume}</strong>\r\n              </p>\r\n              <Link to=\"/\" className=\"kit__utils__link font-size-16\">\r\n                <i className=\"fe fe-arrow-left mr-1 align-middle\" />\r\n                Kembali\r\n              </Link>\r\n              <Button onClick={this.onButtonAddClick} className=\"btn btn-lg btn-success width-200 mb-2 float-right\">\r\n                Proses\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessFreeze);\r\n"],"sourceRoot":""}