{"version":3,"sources":["pages/production/thawing/index.js"],"names":["Option","Select","ProcessThawing","state","transactionIdSelectOption","thawingDataDetails","filteredThawingData","totalQuantityWeight","totalQuantityVolume","customer","formTransactionIdHideToggle","inputItemSelectOption","outputItemName","inputQuantityVolumeMeasurementUnit","isInputQuantityWeightDisabled","isInputQuantityVolumeDisabled","formRefInput","React","createRef","onItemSourceChange","event","thawingData","props","current","setFieldsValue","transactionId","undefined","inputItemName","inputQuantityWeight","inputQuantityVolume","outputQuantityWeight","outputQuantityVolume","setState","stockFrozenData","map","o","value","item_name","key","onTransactionIdChange","filter","data","reference_id","forEach","item","i","item_name_frozen","parseInt","quantity_weight","quantity_volume","onInputItemChange","inputItemList","getFieldsValue","itemSource","group","type","onFinish","values","keyId","length","push","input_quantity_weight","input_quantity_volume","output_quantity_weight","output_quantity_volume","onButtonAddClick","newThawingId","notification","error","message","payload","thawingId","referenceId","items","processThawing","this","generateThawingId","getPendingTransaction","today","Date","toLocaleDateString","Object","keys","pendingTransactionId","title","className","labelCol","xs","span","sm","wrapperCol","ref","labelAlign","Item","name","label","placeholder","disabled","id","rules","required","onChange","style","display","addonAfter","columns","width","dataIndex","dataSource","to","onClick","Component","connect","thawing","dispatch"],"mappings":"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","file":"static/js/20.7c5ebc54.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Table, Input, Select, Form, Button, notification } from 'antd';\r\nimport './style.module.css';\r\n\r\nconst { Option } = Select\r\n\r\nconst mapStateToProps = ({ thawing }) => ({\r\n  newThawingId: thawing.newThawingId,\r\n  thawingData: thawing.thawingData,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generateThawingId: () => {\r\n      dispatch({\r\n        type: 'thawing/GENERATE_THAWING_ID',\r\n      })\r\n    },\r\n    getPendingTransaction: () => {\r\n      dispatch({\r\n        type: 'thawing/GET_DATA'\r\n      })\r\n    },\r\n    processThawing: (payload) => {\r\n      dispatch({\r\n        type: 'thawing/PROCESS_THAWING',\r\n        payload,\r\n      })\r\n    },\r\n  }\r\n}\r\n\r\nclass ProcessThawing extends React.Component {\r\n  state = {\r\n    transactionIdSelectOption: null,\r\n    thawingDataDetails: null,\r\n    filteredThawingData: [],\r\n    totalQuantityWeight: null,\r\n    totalQuantityVolume: null,\r\n    customer: null,\r\n    formTransactionIdHideToggle: null,\r\n    inputItemSelectOption: null,\r\n    outputItemName: null,\r\n    inputQuantityVolumeMeasurementUnit: null,\r\n    isInputQuantityWeightDisabled: null,\r\n    isInputQuantityVolumeDisabled: null,\r\n  }\r\n\r\n  formRefInput = React.createRef();\r\n\r\n  componentDidMount() {\r\n    const { generateThawingId, getPendingTransaction }= this.props;\r\n    generateThawingId();\r\n    getPendingTransaction();\r\n  }\r\n\r\n  onItemSourceChange = (event) => {\r\n    const { thawingData }= this.props;\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      transactionId: undefined,\r\n      inputItemName: undefined,\r\n      inputQuantityWeight: undefined,\r\n      inputQuantityVolume: undefined,\r\n      outputQuantityWeight: undefined,\r\n      outputQuantityVolume: undefined,\r\n    });\r\n\r\n    if(event === \"transaction\")\r\n    {\r\n      this.setState({\r\n        inputItemSelectOption: [],\r\n        formTransactionIdHideToggle: false,\r\n        outputItemName: undefined,\r\n        thawingDataDetails: [],\r\n        isInputQuantityVolumeDisabled: true,\r\n        isInputQuantityWeightDisabled: true,\r\n      })\r\n    }\r\n    else\r\n    {\r\n      // Populate Input item list\r\n      const inputItemSelectOption = thawingData.stockFrozenData.map(o => (\r\n        <Option value={o.item_name} key={o.item_name}>FROZEN {o.item_name}</Option>\r\n      ))\r\n\r\n      this.formRefInput.current.setFieldsValue({\r\n        transactionId: undefined,\r\n      });\r\n      this.setState({\r\n        inputItemSelectOption,\r\n        formTransactionIdHideToggle: true,\r\n        outputItemName: undefined,\r\n        thawingDataDetails: [],\r\n        isInputQuantityVolumeDisabled: false,\r\n        isInputQuantityWeightDisabled: false,\r\n      }) \r\n    }\r\n  }\r\n\r\n  onTransactionIdChange = (event) => {\r\n    const { thawingData }= this.props;\r\n    let totalQuantityWeight = 0;\r\n    let totalQuantityVolume = 0;\r\n    let filteredThawingData = [];\r\n    let thawingDataDetails = [];\r\n\r\n    this.setState({\r\n      thawingDataDetails,\r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n      filteredThawingData,\r\n    })\r\n\r\n    thawingDataDetails = thawingData.thawingData.filter(data => {\r\n      return data.reference_id === event\r\n    })\r\n\r\n    // Populate Input item list\r\n    const inputItemSelectOption = thawingDataDetails.map(o => (\r\n      <Option value={o.item_name} key={o.item_name}>FROZEN {o.item_name}</Option>\r\n    ))\r\n    \r\n    thawingDataDetails.forEach((item, i) => {\r\n      // Add key to each index so it will be unique\r\n      item.key = i + 1;\r\n\r\n      // add frozen in front of item name\r\n      item.item_name_frozen = `FROZEN ${item.item_name}`;\r\n\r\n      // Calculate the total quantity of all item\r\n      totalQuantityWeight += parseInt(item.quantity_weight, 10);\r\n      totalQuantityVolume += parseInt(item.quantity_volume, 10);\r\n    });\r\n\r\n    filteredThawingData = thawingDataDetails;\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      customer: thawingDataDetails[0].customer,\r\n    });\r\n\r\n    this.setState({\r\n      inputItemSelectOption,\r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n      filteredThawingData,\r\n    })\r\n  }\r\n\r\n  onInputItemChange = (event) => {\r\n    const { thawingData } = this.props;\r\n    const { filteredThawingData } = this.state;\r\n    let inputQuantityVolumeMeasurementUnit = \"Ekor\";\r\n\r\n    const { itemSource } = this.formRefInput.current.getFieldsValue();\r\n\r\n    let inputItemList = [];\r\n    if (itemSource !== \"transaction\")\r\n    {\r\n      inputItemList = thawingData.stockFrozenData.filter(data => {\r\n        return data.item_name === event\r\n      })\r\n\r\n      if (inputItemList[0].group === \"whole\")\r\n      {\r\n        inputQuantityVolumeMeasurementUnit = inputItemList[0].type === \"main\" ? inputQuantityVolumeMeasurementUnit : \"Pax\";\r\n      }\r\n    }\r\n    else\r\n    {\r\n      inputItemList = filteredThawingData.filter(data => {\r\n        return data.item_name === event\r\n      })\r\n\r\n      if (inputItemList[0].group === \"whole\")\r\n      {\r\n        inputQuantityVolumeMeasurementUnit = inputItemList[0].type === \"main\" ? inputQuantityVolumeMeasurementUnit : \"Pax\";\r\n      }\r\n    }\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      inputQuantityWeight: inputItemList[0].quantity_weight,\r\n      inputQuantityVolume: inputItemList[0].quantity_volume,\r\n    });\r\n\r\n    this.setState({\r\n      inputQuantityVolumeMeasurementUnit,\r\n      outputItemName: `FRESH ${event}`,\r\n    });\r\n  }\r\n\r\n  onFinish = values => {\r\n    let { thawingDataDetails, totalQuantityWeight, totalQuantityVolume } = this.state;\r\n\r\n    this.setState({\r\n      thawingDataDetails: [],\r\n    })\r\n\r\n    let keyId = 1;\r\n    if(thawingDataDetails === null)\r\n    {\r\n      thawingDataDetails = []\r\n    }\r\n    else if (thawingDataDetails.length > 0)\r\n    {\r\n      keyId = thawingDataDetails[thawingDataDetails.length-1].key + 1;\r\n    }\r\n\r\n    thawingDataDetails.push({\r\n      key: keyId,\r\n      item_name: values.inputItemName,\r\n      item_name_frozen: `FROZEN ${values.inputItemName}`,\r\n      input_quantity_weight: values.inputQuantityWeight,\r\n      input_quantity_volume: values.inputQuantityVolume,\r\n      output_quantity_weight: values.outputQuantityWeight,\r\n      output_quantity_volume: values.outputQuantityVolume,\r\n    })\r\n\r\n    // Calculate the total quantity of all item\r\n    totalQuantityWeight += parseInt(values.outputQuantityWeight, 10);\r\n    totalQuantityVolume += parseInt(values.outputQuantityVolume, 10);\r\n\r\n    this.setState({\r\n      thawingDataDetails,\r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n    })\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      inputItemName: undefined,\r\n      inputQuantityWeight: undefined,\r\n      inputQuantityVolume: undefined,\r\n      outputItemName: undefined,\r\n      outputQuantityWeight: undefined,\r\n      outputQuantityVolume: undefined,\r\n    });\r\n  }\r\n\r\n  onButtonAddClick = () => {\r\n    const { newThawingId } = this.props;\r\n\r\n    let { \r\n      transactionId\r\n    } = this.formRefInput.current.getFieldsValue();\r\n\r\n    const { \r\n      thawingDataDetails,\r\n    } = this.state;\r\n\r\n    if( thawingDataDetails === null || thawingDataDetails.length < 1)\r\n    {\r\n      notification.error({\r\n        message: 'Silahkan pilih kode invoice'\r\n      })\r\n      return;\r\n    }\r\n\r\n    transactionId = transactionId || \"\";\r\n\r\n    const payload = \r\n      {\r\n        thawingId: newThawingId,\r\n        referenceId: transactionId,\r\n        items: thawingDataDetails,\r\n      }      \r\n\r\n    const { processThawing } = this.props;\r\n\r\n    // send data to backend\r\n    processThawing(payload);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Nama Item',\r\n        width: 100,\r\n        dataIndex: 'item_name_frozen',\r\n        key: 'item_name_frozen',\r\n      },\r\n      {\r\n        title: 'Qty (kg)',\r\n        width: 100,\r\n        dataIndex: 'output_quantity_weight',\r\n        key: 'output_quantity_weight',\r\n      },\r\n      {\r\n        title: 'Qty (Ekor/Pax)',\r\n        width: 100,\r\n        dataIndex: 'output_quantity_volume',\r\n        key: 'output_quantity_volume',\r\n      },\r\n    ]\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    }\r\n\r\n    const { newThawingId, thawingData }= this.props;\r\n\r\n    const fullDate = new Date();\r\n    const today = fullDate.toLocaleDateString(\"en-US\")\r\n    const isInputDisabled = true;\r\n\r\n    let { \r\n        transactionIdSelectOption, \r\n        customer,\r\n        thawingDataDetails,\r\n        totalQuantityWeight,\r\n        totalQuantityVolume,\r\n        formTransactionIdHideToggle,\r\n        inputItemSelectOption, \r\n        outputItemName,\r\n        inputQuantityVolumeMeasurementUnit,\r\n        isInputQuantityWeightDisabled,\r\n        isInputQuantityVolumeDisabled,\r\n       } = this.state\r\n\r\n\r\n    transactionIdSelectOption = transactionIdSelectOption || [];\r\n\r\n    thawingDataDetails = thawingDataDetails || [];\r\n\r\n    totalQuantityWeight = totalQuantityWeight || 0;\r\n    totalQuantityVolume = totalQuantityVolume || 0;\r\n    customer = customer || \"\";\r\n    formTransactionIdHideToggle = formTransactionIdHideToggle === null ? true : formTransactionIdHideToggle;\r\n\r\n    inputItemSelectOption = inputItemSelectOption || [];\r\n    outputItemName = outputItemName || \"\";\r\n    inputQuantityVolumeMeasurementUnit = inputQuantityVolumeMeasurementUnit || \"Ekor\";\r\n\r\n    isInputQuantityWeightDisabled = isInputQuantityWeightDisabled === null ? true : isInputQuantityWeightDisabled;\r\n    isInputQuantityVolumeDisabled = isInputQuantityVolumeDisabled === null ? true : isInputQuantityVolumeDisabled;\r\n\r\n    if(Object.keys(thawingData).length > 0)\r\n    {\r\n      // Populate invoice id list\r\n      transactionIdSelectOption = thawingData.pendingTransactionId.map(o => (\r\n        <Option value={o} key={o}>{o}</Option>\r\n      ))\r\n\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Helmet title=\"Process / Thawing\" />\r\n        <div className=\"kit__utils__heading\">\r\n          <h5>Proses Thawing</h5>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form \r\n              {...formItemLayout} \r\n              ref={this.formRefInput}\r\n              labelAlign=\"left\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Form.Item name=\"newThawingId\" label=\"Kode Thawing\">\r\n                <Input placeholder={newThawingId} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item name=\"dateToday\" label=\"Tanggal\">\r\n                <Input placeholder={today} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item id=\"itemSource\" name=\"itemSource\" label=\"Asal Item\" rules={[{ required: true, message: 'Asal Item harus dipilih' }]}>\r\n                <Select onChange={this.onItemSourceChange} placeholder=\"Pilih asal item\">\r\n                  <Option value=\"transaction\" key=\"transaction\">Invoice Id</Option>\r\n                  <Option value=\"frozenWarehouse\" key=\"frozenWarehouse\">Gudang Frozen</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item id=\"transactionId\" name=\"transactionId\" label=\"Kode Invoice\" style={formTransactionIdHideToggle === true ? { display: 'none'} : { display: ''}}>\r\n                <Select onChange={this.onTransactionIdChange} placeholder=\"Pilih kode invoice\">\r\n                  {transactionIdSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"customer\" label=\"Pembeli\" style={formTransactionIdHideToggle === true ? { display: 'none'} : { display: ''}}>\r\n                <Input placeholder={customer} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item id=\"inputItemName\" name=\"inputItemName\" label=\"Nama Item\" rules={[{ required: true, message: 'Item harus dipilih' }]}>\r\n                <Select onChange={this.onInputItemChange} placeholder=\"Pilih item\">\r\n                  {inputItemSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"inputQuantityWeight\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" disabled={isInputQuantityWeightDisabled} placeholder=\"Masukkan quantity\" addonAfter=\"kg\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"inputQuantityVolume\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" disabled={isInputQuantityVolumeDisabled} placeholder=\"Masukkan quantity\" addonAfter={inputQuantityVolumeMeasurementUnit} />\r\n              </Form.Item>\r\n              <div className=\"kit__utils__heading\">\r\n                <h5>Hasil Thawing</h5>\r\n              </div>\r\n              <Form.Item name=\"outputItemName\" label=\"Item hasil\">\r\n                <Input placeholder={outputItemName} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item name=\"outputQuantityWeight\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter=\"kg\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"outputQuantityVolume\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter={inputQuantityVolumeMeasurementUnit} />\r\n              </Form.Item>\r\n              <button type=\"submit\" className=\"btn btn-success\">\r\n                Tambah Hasil Thawing\r\n              </button>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <div className=\"mb-4 kit__utils__scrollTable\">\r\n                <Table columns={columns} dataSource={thawingDataDetails} />\r\n              </div>\r\n            </Form>\r\n            <div className=\"border-top text-dark font-size-18 pt-4\">\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (kg): <strong className=\"font-size-24\">{totalQuantityWeight}</strong>\r\n              </p>\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (Ekor/Pax): <strong className=\"font-size-24\">{totalQuantityVolume}</strong>\r\n              </p>\r\n              <Link to=\"/\" className=\"kit__utils__link font-size-16\">\r\n                <i className=\"fe fe-arrow-left mr-1 align-middle\" />\r\n                Kembali\r\n              </Link>\r\n              <Button onClick={this.onButtonAddClick} className=\"btn btn-lg btn-success width-200 mb-2 float-right\">\r\n                Proses\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessThawing);\r\n"],"sourceRoot":""}