{"version":3,"sources":["pages/production/freeze/index.js"],"names":["Option","Select","ProcessFreeze","state","totalQuantityWeight","totalQuantityVolume","freezeDataDetails","inputItemSelectOption","outputItemName","inputQuantityVolumeMeasurementUnit","formRefInput","React","createRef","onInputItemChange","event","inputItemList","props","freezeData","filter","data","item_name","group","type","current","setFieldsValue","inputQuantityWeight","quantity_weight","inputQuantityVolume","quantity_volume","setState","onFinish","values","keyId","length","key","push","inputItemName","item_name_fresh","input_quantity_weight","input_quantity_volume","output_quantity_weight","outputQuantityWeight","output_quantity_volume","outputQuantityVolume","parseInt","undefined","onButtonAddClick","newFreezeId","notification","error","message","payload","freezeId","items","processFreeze","this","generateFreezeId","getFreezeData","today","Date","toLocaleDateString","map","o","value","title","className","labelCol","xs","span","sm","wrapperCol","ref","labelAlign","Item","name","label","placeholder","disabled","id","rules","required","onChange","addonAfter","columns","width","dataIndex","dataSource","to","onClick","Component","connect","freeze","dispatch"],"mappings":"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","file":"static/js/17.de3ec6b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Table, Input, Select, Form, Button, notification } from 'antd';\r\nimport './style.module.css';\r\n\r\nconst { Option } = Select\r\n\r\nconst mapStateToProps = ({ freeze }) => ({\r\n  newFreezeId: freeze.newFreezeId,\r\n  freezeData: freeze.freezeData,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generateFreezeId: () => {\r\n      dispatch({\r\n        type: 'freeze/GENERATE_FREEZE_ID',\r\n      })\r\n    },\r\n    getFreezeData: () => {\r\n      dispatch({\r\n        type: 'freeze/GET_DATA'\r\n      })\r\n    },\r\n    processFreeze: (payload) => {\r\n      dispatch({\r\n        type: 'freeze/PROCESS_FREEZE',\r\n        payload,\r\n      })\r\n    },\r\n  }\r\n}\r\n\r\nclass ProcessFreeze extends React.Component {\r\n  state = {\r\n    totalQuantityWeight: null,\r\n    totalQuantityVolume: null,\r\n    freezeDataDetails: null,\r\n    inputItemSelectOption: null,\r\n    outputItemName: null,\r\n    inputQuantityVolumeMeasurementUnit: null,\r\n  }\r\n\r\n  formRefInput = React.createRef();\r\n\r\n  componentDidMount() {\r\n    const { generateFreezeId, getFreezeData }= this.props;\r\n    generateFreezeId();\r\n    getFreezeData();\r\n  }\r\n\r\n  onInputItemChange = (event) => {\r\n    const { freezeData }= this.props;\r\n    let inputQuantityVolumeMeasurementUnit = \"Ekor\";\r\n\r\n    const inputItemList = freezeData.filter(data => {\r\n      return data.item_name === event\r\n    })\r\n\r\n    if (inputItemList[0].group === \"whole\")\r\n    {\r\n      inputQuantityVolumeMeasurementUnit = inputItemList[0].type === \"main\" ? inputQuantityVolumeMeasurementUnit : \"Pax\";\r\n    }\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      inputQuantityWeight: inputItemList[0].quantity_weight,\r\n      inputQuantityVolume: inputItemList[0].quantity_volume,\r\n    });\r\n\r\n    this.setState({\r\n      inputQuantityVolumeMeasurementUnit,\r\n      outputItemName: `FROZEN ${event}`,\r\n    });\r\n  }\r\n\r\n  onFinish = values => {\r\n    let { freezeDataDetails, totalQuantityWeight, totalQuantityVolume } = this.state;\r\n\r\n    this.setState({\r\n      freezeDataDetails: [],\r\n    })\r\n\r\n    let keyId = 1;\r\n    if(freezeDataDetails === null)\r\n    {\r\n      freezeDataDetails = []\r\n    }\r\n    else if (freezeDataDetails.length > 0)\r\n    {\r\n      keyId = freezeDataDetails[freezeDataDetails.length-1].key + 1;\r\n    }\r\n\r\n    freezeDataDetails.push({\r\n      key: keyId,\r\n      item_name: values.inputItemName,\r\n      item_name_fresh: `FRESH ${values.inputItemName}`,\r\n      input_quantity_weight: values.inputQuantityWeight,\r\n      input_quantity_volume: values.inputQuantityVolume,\r\n      output_quantity_weight: values.outputQuantityWeight,\r\n      output_quantity_volume: values.outputQuantityVolume,\r\n    })\r\n\r\n    // Calculate the total quantity of all item\r\n    totalQuantityWeight += parseInt(values.outputQuantityWeight, 10);\r\n    totalQuantityVolume += parseInt(values.outputQuantityVolume, 10);\r\n\r\n    this.setState({\r\n      freezeDataDetails,\r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n    })\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      inputItemName: undefined,\r\n      inputQuantityWeight: undefined,\r\n      inputQuantityVolume: undefined,\r\n      outputItemName: undefined,\r\n      outputQuantityWeight: undefined,\r\n      outputQuantityVolume: undefined,\r\n    });\r\n  }\r\n\r\n  onButtonAddClick = () => {\r\n    const { newFreezeId } = this.props;\r\n    const { freezeDataDetails } = this.state;\r\n    \r\n    if( freezeDataDetails === null || freezeDataDetails.length < 1)\r\n    {\r\n      notification.error({\r\n        message: 'Silahkan pilih item yang ingin di freeze'\r\n      })\r\n      return;\r\n    }\r\n\r\n    const payload = \r\n      {\r\n        freezeId: newFreezeId,\r\n        items: freezeDataDetails,\r\n      }      \r\n\r\n    const { processFreeze } = this.props;\r\n\r\n    // send data to backend\r\n    processFreeze(payload);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Nama Item',\r\n        width: 100,\r\n        dataIndex: 'item_name_fresh',\r\n        key: 'item_name_fresh',\r\n      },\r\n      {\r\n        title: 'Qty (kg)',\r\n        width: 100,\r\n        dataIndex: 'output_quantity_weight',\r\n        key: 'output_quantity_weight',\r\n      },\r\n      {\r\n        title: 'Qty (Ekor/Pax)',\r\n        width: 100,\r\n        dataIndex: 'output_quantity_volume',\r\n        key: 'output_quantity_volume',\r\n      },\r\n    ]\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    }\r\n\r\n    const { newFreezeId, freezeData }= this.props;\r\n\r\n    const fullDate = new Date();\r\n    const today = fullDate.toLocaleDateString(\"en-US\")\r\n    const isInputDisabled = true;\r\n\r\n    let { \r\n        totalQuantityWeight,\r\n        totalQuantityVolume,\r\n        freezeDataDetails,\r\n        inputItemSelectOption, \r\n        outputItemName,\r\n        inputQuantityVolumeMeasurementUnit,\r\n       } = this.state\r\n\r\n    inputItemSelectOption = inputItemSelectOption || [];\r\n    freezeDataDetails = freezeDataDetails || [];\r\n    totalQuantityWeight = totalQuantityWeight || 0;\r\n    totalQuantityVolume = totalQuantityVolume || 0;\r\n    outputItemName = outputItemName || \"\";\r\n    inputQuantityVolumeMeasurementUnit = inputQuantityVolumeMeasurementUnit || \"Ekor\";\r\n\r\n    if(freezeData.length > 0)\r\n    {\r\n\r\n      // Populate Input item list\r\n      inputItemSelectOption = freezeData.map(o => (\r\n        <Option value={o.item_name} key={o.item_name}>FRESH {o.item_name}</Option>\r\n      ))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Helmet title=\"Process / freeze\" />\r\n        <div className=\"kit__utils__heading\">\r\n          <h5>Proses Freeze</h5>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form \r\n              {...formItemLayout} \r\n              ref={this.formRefInput}\r\n              labelAlign=\"left\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Form.Item name=\"newFreezeId\" label=\"Kode freeze\">\r\n                <Input placeholder={newFreezeId} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item name=\"dateToday\" label=\"Tanggal\">\r\n                <Input placeholder={today} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item id=\"inputItemName\" name=\"inputItemName\" label=\"Nama Item\" rules={[{ required: true, message: 'Item harus dipilih' }]}>\r\n                <Select onChange={this.onInputItemChange} placeholder=\"Pilih item\">\r\n                  {inputItemSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"inputQuantityWeight\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter=\"kg\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"inputQuantityVolume\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter={inputQuantityVolumeMeasurementUnit} />\r\n              </Form.Item>\r\n              <div className=\"kit__utils__heading\">\r\n                <h5>Hasil Freeze</h5>\r\n              </div>\r\n              <Form.Item name=\"outputItemName\" label=\"Item hasil\">\r\n                <Input placeholder={outputItemName} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item name=\"outputQuantityWeight\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter=\"kg\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"outputQuantityVolume\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter={inputQuantityVolumeMeasurementUnit} />\r\n              </Form.Item>\r\n              <button type=\"submit\" className=\"btn btn-success\">\r\n                Tambah Hasil Freeze\r\n              </button>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <div className=\"mb-4 kit__utils__scrollTable\">\r\n                <Table columns={columns} dataSource={freezeDataDetails} />\r\n              </div>\r\n            </Form>\r\n            <div className=\"border-top text-dark font-size-18 pt-4\">\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (kg): <strong className=\"font-size-24\">{totalQuantityWeight}</strong>\r\n              </p>\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (Ekor/Pax): <strong className=\"font-size-24\">{totalQuantityVolume}</strong>\r\n              </p>\r\n              <Link to=\"/\" className=\"kit__utils__link font-size-16\">\r\n                <i className=\"fe fe-arrow-left mr-1 align-middle\" />\r\n                Kembali\r\n              </Link>\r\n              <Button onClick={this.onButtonAddClick} className=\"btn btn-lg btn-success width-200 mb-2 float-right\">\r\n                Proses\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessFreeze);\r\n"],"sourceRoot":""}