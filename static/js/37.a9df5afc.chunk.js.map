{"version":3,"sources":["pages/transaction/form/transactionDetail/index.js","pages/transaction/form/main/index.js","pages/transaction/index.js"],"names":["TableTransactionDetail","columns","title","width","dataIndex","key","transactionDetail","this","props","length","forEach","item","i","item_name_actual","is_frozen","item_name","dataSource","React","Component","TableTransaction","state","searchText","sortedInfo","expandedRow","latestRecordId","handleChange","pagination","filters","sorter","console","log","setState","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","SearchOutlined","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","className","href","preventDefault","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","getTransactionHistory","resetTransactionHistory","a","b","id","replace","sortOrder","columnKey","order","created_on","customer","discount","total_price","total_quantity_weight","total_quantity_volume","created_by","fixed","status_name","transactionHistory","getTransactionDetail","onExpand","isExpanded","expandedRowRender","expandedRowKeys","expandRowByClick","scroll","x","y","connect","transaction","dispatch","payload","Transaction","Helmet","to"],"mappings":"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","file":"static/js/37.a9df5afc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\n\r\nclass TableTransactionDetail extends React.Component {\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Item',\r\n        width: 10,\r\n        dataIndex: 'item_name_actual',\r\n        key: 'item_name_actual',\r\n      },\r\n      {\r\n        title: 'Qty (kg)',\r\n        width: 10,\r\n        dataIndex: 'quantity_weight',\r\n        key: 'quantity_weight',\r\n      },\r\n      {\r\n        title: 'Qty (Ekor/Pax)',\r\n        width: 10,\r\n        dataIndex: 'quantity_volume',\r\n        key: 'quantity_volume',\r\n      },\r\n      {\r\n        title: 'Harga /kg',\r\n        width: 10,\r\n        dataIndex: 'unit_price',\r\n        key: 'unit_price',\r\n      },\r\n      {\r\n        title: 'Discount',\r\n        width: 10,\r\n        dataIndex: 'discount',\r\n        key: 'discount',\r\n      },\r\n      {\r\n        title: 'Total',\r\n        width: 10,\r\n        dataIndex: 'total_price',\r\n        key: 'total_price',\r\n      },\r\n    ]\r\n\r\n    const { transactionDetail }= this.props;\r\n\r\n    if (transactionDetail.length > 0)\r\n    {\r\n      // Add key to each index so it will be unique\r\n      transactionDetail.forEach((item, i) => {\r\n        item.key = i + 1;\r\n        item.item_name_actual = `${item.is_frozen === true ? \"FROZEN\" : \"FRESH\"} ${item.item_name}`;\r\n      });\r\n\r\n      return (\r\n        <div>\r\n          <Table columns={columns} dataSource={transactionDetail} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Table columns={columns} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableTransactionDetail;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport Highlighter from 'react-highlight-words'\r\nimport { Table, Input, Button } from 'antd';\r\nimport TableTransactionDetail from '../transactionDetail';\r\n\r\nconst mapStateToProps = ({ transaction }) => ({\r\n  transactionHistory: transaction.transactionHistory,\r\n  transactionDetail: transaction.transactionDetail,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getTransactionHistory: () => dispatch({ type: 'transaction/GET_TRANSACTION_HISTORY' }),\r\n    resetTransactionHistory: () => dispatch({ \r\n      type: 'transaction/SET_STATE',\r\n      payload: {\r\n        transactionHistory: [],          \r\n      },\r\n    }),\r\n    getTransactionDetail: (id) => dispatch({ \r\n      type: 'transaction/GET_TRANSACTION_DETAIL',\r\n      payload: {\r\n        id,\r\n      },\r\n    }),\r\n  }\r\n}\r\n\r\nclass TableTransaction extends React.Component {\r\n\r\n  state = {\r\n    searchText: '',\r\n    sortedInfo: null,\r\n    expandedRow: null,\r\n    latestRecordId: null,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getTransactionHistory , resetTransactionHistory }= this.props;\r\n    resetTransactionHistory();\r\n    getTransactionHistory();\r\n  }\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log(sorter);\r\n    // console.log('Various parameters', pagination, filters, sorter)\r\n    this.setState({\r\n      sortedInfo: sorter,\r\n    })\r\n  }\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node\r\n          }}\r\n          // placeholder={`Search ${dataIndex}`}\r\n          placeholder='Cari'\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n          icon={<SearchOutlined />}\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) => {\r\n      record[dataIndex] = record[dataIndex] === null ? \"\" : record[dataIndex];\r\n      return record[dataIndex]\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(value.toLowerCase())\r\n    },\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select())\r\n      }\r\n    },\r\n    render: text => {\r\n      const { searchText } = this.state\r\n      text = text === null ? \"\" : text;\r\n      if (dataIndex === \"id\"){\r\n        return (\r\n          <a className=\"btn btn-sm btn-light\" href=\"#\" onClick={e => e.preventDefault()}>\r\n            <Highlighter\r\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n              searchWords={[searchText]}\r\n              autoEscape\r\n              textToHighlight={text.toString()}\r\n            />\r\n          </a>\r\n        )\r\n      }\r\n      if (dataIndex === \"customer\"){\r\n        return (\r\n          <a className=\"btn btn-sm btn-light\" href=\"#\" onClick={e => e.preventDefault()}>\r\n            <Highlighter\r\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n              searchWords={[searchText]}\r\n              autoEscape\r\n              textToHighlight={text.toString()}\r\n            />\r\n          </a>\r\n        )\r\n      }\r\n      if (dataIndex === \"status_name\"){\r\n        return (\r\n          <span\r\n            className={\r\n              text === 'PENDING'\r\n                ? 'font-size-12 badge badge-primary'\r\n                : 'font-size-12 badge badge-default'\r\n            }\r\n          >\r\n            <Highlighter\r\n              highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n              searchWords={[searchText]}\r\n              autoEscape\r\n              textToHighlight={text.toString()}\r\n            />\r\n          </span>\r\n        )\r\n      }\r\n\r\n      return (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      )\r\n    },\r\n  })\r\n\r\n  handleSearch = (selectedKeys, confirm) => {\r\n    confirm()\r\n    this.setState({ searchText: selectedKeys[0] })\r\n  }\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters()\r\n    this.setState({ searchText: '' })\r\n  }\r\n\r\n  render() {\r\n    let { sortedInfo, expandedRow, latestRecordId } = this.state\r\n\r\n    sortedInfo = sortedInfo || {};\r\n    expandedRow = expandedRow || [];\r\n    latestRecordId = latestRecordId || \"\";\r\n    \r\n    const columns = [\r\n      {\r\n        title: 'ID',\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        ...this.getColumnSearchProps('id'),\r\n        sorter: (a, b) => a.id.replace(/-/g, '') - b.id.replace(/-/g, ''),\r\n        sortOrder: sortedInfo.columnKey === 'id' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Tanggal',\r\n        width: 250,\r\n        dataIndex: 'created_on',\r\n        key: 'created_on',\r\n        ...this.getColumnSearchProps('created_on'),\r\n        sorter: (a, b) => a.created_on.replace(/-|:| |\\./g, '') - b.created_on.replace(/-|:| |\\./g, ''),\r\n        sortOrder: sortedInfo.columnKey === 'created_on' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Customer',\r\n        dataIndex: 'customer',\r\n        key: 'customer',\r\n        ...this.getColumnSearchProps('customer'),\r\n        sorter: (a, b) => a.customer.length - b.customer.length,\r\n        sortOrder: sortedInfo.columnKey === 'customer' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Discount',\r\n        dataIndex: 'discount',\r\n        key: 'discount',\r\n        // render: text => <span>{`Rp ${text}`}</span>,\r\n        ...this.getColumnSearchProps('discount'),\r\n        sorter: (a, b) => a.discount - b.discount,\r\n        sortOrder: sortedInfo.columnKey === 'discount' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Total',\r\n        dataIndex: 'total_price',\r\n        key: 'total_price',\r\n        // render: text => <span>{`Rp ${text}`}</span>,\r\n        ...this.getColumnSearchProps('total_price'),\r\n        sorter: (a, b) => a.total_price - b.total_price,\r\n        sortOrder: sortedInfo.columnKey === 'total_price' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Qty (kg)',\r\n        width: 150,\r\n        dataIndex: 'total_quantity_weight',\r\n        key: 'total_quantity_weight',\r\n        ...this.getColumnSearchProps('quantity_weight'),\r\n        sorter: (a, b) => a.total_quantity_weight - b.total_quantity_weight,\r\n        sortOrder: sortedInfo.columnKey === 'total_quantity_weight' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Qty (Ekor/Pax)',\r\n        width: 150,\r\n        dataIndex: 'total_quantity_volume',\r\n        key: 'total_quantity_volume',\r\n        ...this.getColumnSearchProps('quantity_volume'),\r\n        sorter: (a, b) => a.total_quantity_volume - b.total_quantity_volume,\r\n        sortOrder: sortedInfo.columnKey === 'total_quantity_volume' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Sales',\r\n        dataIndex: 'created_by',\r\n        key: 'created_by',\r\n        ...this.getColumnSearchProps('created_by'),\r\n        sorter: (a, b) => a.created_by.length - b.created_by.length,\r\n        sortOrder: sortedInfo.columnKey === 'created_by' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status_name',\r\n        key: 'status_name',\r\n        fixed: 'right',\r\n        ...this.getColumnSearchProps('status_name'),\r\n        sorter: (a, b) => a.status_name.length - b.status_name.length,\r\n        sortOrder: sortedInfo.columnKey === 'status_name' && sortedInfo.order,\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'action',\r\n        fixed: 'right',\r\n        render: () => (\r\n          <span>\r\n            <a href=\"#\" onClick={e => e.preventDefault()} className=\"btn btn-sm btn-light\">\r\n              <small>\r\n                <i className=\"fe fe-trash mr-2\" />\r\n              </small>\r\n              Cancel\r\n            </a>\r\n          </span>\r\n        ),\r\n      },\r\n    ]\r\n    const { transactionHistory, transactionDetail, getTransactionDetail }= this.props;\r\n\r\n    if (transactionHistory.length > 0)\r\n    {\r\n      // Add key to each index so it will be unique\r\n      transactionHistory.forEach((item, i) => {\r\n        item.key = i + 1;\r\n      });\r\n\r\n      return (\r\n        <div className=\"text-nowrap\">\r\n          <Table \r\n            columns={columns} \r\n            dataSource={transactionHistory} \r\n            onChange={this.handleChange} \r\n            onExpand={(isExpanded, record) => {\r\n              if(latestRecordId !== record.id)\r\n              {\r\n                getTransactionDetail(record.id);  \r\n              }\r\n                \r\n              this.setState({ \r\n                latestRecordId: record.id,\r\n                expandedRow: isExpanded ? [record.key] : undefined });\r\n              }\r\n            }\r\n            expandedRowRender={() => (\r\n              <TableTransactionDetail \r\n                transactionDetail={transactionDetail}\r\n              />\r\n            )}\r\n            expandedRowKeys={expandedRow}\r\n            expandRowByClick=\"true\"\r\n            scroll={{ x: 1500, y: 300 }} \r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"text-nowrap\">\r\n        <Table columns={columns} scroll={{ x: 1500, y: 300 }} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableTransaction);","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet';\r\nimport { Button } from 'antd';\r\nimport TableTransaction from './form/main';\r\n\r\nconst Transaction = () => {\r\n  return (\r\n    <div>\r\n      <Helmet title=\"History / Penjualan\" />\r\n      <div className=\"kit__utils__heading\">\r\n        <h5>\r\n          <span className=\"mr-3\">Daftar Penjualan</span>\r\n        </h5>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"px-4\">\r\n          <br />\r\n          <Link to='/transaction/input'>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"large\"\r\n              style={{ width: 100, marginRight: 8 }}\r\n            >\r\n              Buat Order\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <TableTransaction />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Transaction\r\n"],"sourceRoot":""}