{"version":3,"sources":["pages/production/cutting/index.js"],"names":["Option","Select","ProcessCutting","state","productionIdSelectOption","formProductionIdHideToggle","outputItemSelectOption","inputItemSelectOption","outputItemList","inputQuantityWeightValue","inputQuantityVolumeValue","formRefInput","React","createRef","formRefOutput","onItemSourceChange","event","cuttingData","props","current","setFieldsValue","outputItemName","undefined","quantityWeight","quantityVolume","productionId","inputQuantityWeight","inputQuantityVolume","itemName","inputDataBuffer","supplyList","map","o","value","production_id","key","setState","inputItemDataBuffer","stockList","filter","data","group","item_name","onProductionIdChange","inputItemList","quantity_weight","quantity_volume","onInputItemChange","console","log","itemGroup","outputItemDataBuffer","itemList","name","onOutputItemChange","onButtonAddClick","newCuttingId","length","notification","error","message","getFieldsValue","payload","cuttingId","itemInput","itemOutput","referenceId","processCutting","onFinish","values","keyId","push","this","generateCuttingId","getCuttingData","columns","title","width","dataIndex","fixed","render","formItemLayout","labelCol","xs","span","sm","wrapperCol","today","Date","toLocaleDateString","Object","keys","result","className","ref","labelAlign","Item","label","placeholder","disabled","id","rules","required","onChange","style","display","type","addonAfter","dataSource","scroll","x","y","to","onClick","backgroundColor","Component","connect","cutting","dispatch"],"mappings":"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","file":"static/js/15.944b0a02.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Table, Input, Select, Form, Button, notification } from 'antd';\r\nimport './style.module.css';\r\n\r\nconst { Option } = Select\r\n\r\nconst mapStateToProps = ({ cutting }) => ({\r\n  newCuttingId: cutting.newCuttingId,\r\n  cuttingData: cutting.cuttingData,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generateCuttingId: () => {\r\n      dispatch({\r\n        type: 'cutting/GENERATE_CUTTING_ID',\r\n      })\r\n    },\r\n    getCuttingData: () => {\r\n      dispatch({\r\n        type: 'cutting/GET_DATA',\r\n      })\r\n    },\r\n    processCutting: (payload) => {\r\n      dispatch({\r\n        type: 'cutting/PROCESS_CUTTING',\r\n        payload,\r\n      })\r\n    },\r\n  }\r\n}\r\n\r\nclass ProcessCutting extends React.Component {\r\n  state = {\r\n    productionIdSelectOption: null,\r\n    formProductionIdHideToggle: true,\r\n    outputItemSelectOption: null,\r\n    inputItemSelectOption: null,\r\n    outputItemList: null,\r\n    inputQuantityWeightValue: null,\r\n    inputQuantityVolumeValue: null,\r\n  }\r\n\r\n  formRefInput = React.createRef()\r\n\r\n  formRefOutput = React.createRef()\r\n\r\n  // const productionIdSelectOption = (\r\n  //   <Option key=\"inputItem\" disabled={isInputDisabled}>input items</Option>\r\n  // );\r\n\r\n  // if(Object.keys(cuttingData).length > 0)\r\n  // {\r\n  //   productionIdSelectOption = cuttingData.supplyList.map(o => (\r\n  //     <Option value={o.production_id} key={o.production_id}>{o.production_id}</Option>\r\n  //   ));\r\n  // }\r\n\r\n  componentDidMount() {\r\n    const { generateCuttingId, getCuttingData }= this.props;\r\n    generateCuttingId();\r\n    getCuttingData();\r\n  }\r\n\r\n\r\n  onItemSourceChange = (event) => {\r\n    const { cuttingData }= this.props;\r\n\r\n    this.formRefOutput.current.setFieldsValue({\r\n      outputItemName: undefined,\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n    });\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      productionId: undefined,\r\n      inputQuantityWeight: undefined,\r\n      inputQuantityVolume: undefined,\r\n      itemName:undefined,\r\n    });\r\n\r\n    if(event === \"production\")\r\n    {\r\n      const inputDataBuffer = cuttingData.supplyList.map(o => (\r\n        <Option value={o.production_id} key={o.production_id}>{o.production_id}</Option>\r\n      ))\r\n      this.setState({\r\n        formProductionIdHideToggle: false,\r\n        productionIdSelectOption: inputDataBuffer,\r\n        inputItemSelectOption: [],\r\n        outputItemList: [],\r\n        outputItemSelectOption: [],\r\n      })\r\n    }\r\n    else\r\n    {\r\n      this.setState({\r\n        formProductionIdHideToggle: true,\r\n        outputItemList: [],\r\n        outputItemSelectOption: [],\r\n      }) \r\n\r\n      const inputItemNameList = cuttingData.stockList.filter(data => {\r\n        return data.group === \"whole\"\r\n      })\r\n\r\n      const inputItemDataBuffer = inputItemNameList.map(o => (\r\n        <Option value={o.item_name} key={o.item_name}>{o.item_name}</Option>\r\n      ))\r\n\r\n      this.setState({\r\n        inputItemSelectOption: inputItemDataBuffer,\r\n      })\r\n    }\r\n  }\r\n\r\n  onProductionIdChange = (event) => {\r\n    const { cuttingData }= this.props;\r\n\r\n    this.setState({\r\n      inputItemSelectOption: [],\r\n      outputItemList: [],\r\n      outputItemSelectOption: [],\r\n    })\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      inputQuantityWeight: undefined,\r\n      inputQuantityVolume: undefined,\r\n      itemName:undefined,\r\n    });\r\n\r\n    const inputItemList = cuttingData.supplyList.filter(data => {\r\n      return data.production_id === event\r\n    })\r\n    \r\n    const inputItemDataBuffer = inputItemList.map(o => (\r\n      <Option value={o.item_name} key={o.item_name}>{o.item_name}</Option>\r\n    ))\r\n\r\n    this.formRefOutput.current.setFieldsValue({\r\n      outputItemName: undefined,\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n    });\r\n\r\n    this.setState({\r\n      inputItemSelectOption: inputItemDataBuffer,\r\n      inputQuantityWeightValue: inputItemList[0].quantity_weight,\r\n      inputQuantityVolumeValue: inputItemList[0].quantity_volume,\r\n    })\r\n  }\r\n\r\n  onInputItemChange = (event) => {\r\n    const { cuttingData }= this.props;\r\n    const inputItemList = cuttingData.stockList.filter(data => {\r\n      return data.item_name === event\r\n    })\r\n    console.log(\"inputitem list\", inputItemList);\r\n    let itemGroup = \"whole\";\r\n    if (inputItemList[0].group === \"whole\")\r\n    {\r\n      itemGroup = \"pieces\";\r\n\r\n      this.setState({\r\n        inputQuantityWeightValue: inputItemList[0].quantity_weight,\r\n        inputQuantityVolumeValue: inputItemList[0].quantity_volume,\r\n      })\r\n\r\n      this.formRefInput.current.setFieldsValue({\r\n        inputQuantityWeight: inputItemList[0].quantity_weight,\r\n        inputQuantityVolume: inputItemList[0].quantity_volume,\r\n      });\r\n    }\r\n    else\r\n    {\r\n      const { inputQuantityWeightValue, inputQuantityVolumeValue } = this.state;\r\n      this.formRefInput.current.setFieldsValue({\r\n        inputQuantityWeight: inputQuantityWeightValue,\r\n        inputQuantityVolume: inputQuantityVolumeValue,\r\n      });\r\n    }\r\n    \r\n    const outputItemNameList = cuttingData.itemList.filter(data => {\r\n      return data.group === itemGroup\r\n    })\r\n\r\n    const outputItemDataBuffer = outputItemNameList.map(o => (\r\n      <Option value={o.name} key={o.name}>{o.name}</Option>\r\n    ))\r\n\r\n    this.setState({\r\n      outputItemSelectOption: outputItemDataBuffer,\r\n      outputItemList: [],\r\n    })\r\n\r\n    this.formRefOutput.current.setFieldsValue({\r\n      outputItemName: undefined,\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n    });\r\n  }\r\n\r\n  onOutputItemChange = () => {\r\n    this.formRefOutput.current.setFieldsValue({\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n    });\r\n  }\r\n\r\n  onButtonAddClick = () => {\r\n    // const { productionId } = this.formRefInput.current.getFieldsValue();\r\n    // console.log(productionId);\r\n    //   notification.error({\r\n    //     message: 'Please fill required data'\r\n    //   })\r\n    // const fullDate = new Date();\r\n    // const today = fullDate.toLocaleDateString(\"en-US\")\r\n    const { newCuttingId }= this.props;\r\n\r\n    const { outputItemList } = this.state;\r\n\r\n    if( outputItemList === null || outputItemList.length < 1)\r\n    {\r\n      notification.error({\r\n        message: 'Please fill required data'\r\n      })\r\n      return;\r\n    }\r\n\r\n    const { itemName, inputQuantityWeight, inputQuantityVolume } = this.formRefInput.current.getFieldsValue();\r\n    let { productionId } = this.formRefInput.current.getFieldsValue();\r\n    productionId = productionId === undefined ? \"\" : productionId;\r\n\r\n    const payload = \r\n      {\r\n      cuttingId: newCuttingId,\r\n      itemInput: itemName,\r\n      inputQuantityWeight,\r\n      inputQuantityVolume,\r\n      itemOutput: outputItemList,\r\n      referenceId: productionId\r\n      }      \r\n\r\n    const { processCutting } = this.props;\r\n\r\n    // send cutting data to backend\r\n    processCutting(payload);\r\n  }\r\n\r\n  onFinish = values => {\r\n    let { outputItemList } = this.state;\r\n    this.setState({\r\n      outputItemList: [],\r\n    })\r\n    let keyId = 1;\r\n    if(outputItemList === null)\r\n    {\r\n      outputItemList = []\r\n    }\r\n    else if (outputItemList.length > 0)\r\n    {\r\n      keyId = outputItemList[outputItemList.length-1].key + 1;\r\n    }\r\n    outputItemList.push({\r\n      key: keyId,\r\n      name: values.outputItemName,\r\n      quantityWeight: values.quantityWeight,\r\n      quantityVolume: values.quantityVolume,\r\n    })\r\n\r\n    this.setState({\r\n      outputItemList,\r\n    })\r\n\r\n    this.formRefOutput.current.setFieldsValue({\r\n      outputItemName: undefined,\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Nama Item',\r\n        width: 100,\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Quantity (kg)',\r\n        width: 100,\r\n        dataIndex: 'quantityWeight',\r\n        key: 'quantityWeight',\r\n      },\r\n      {\r\n        title: 'Quantity (Ekor)',\r\n        width: 100,\r\n        dataIndex: 'quantityVolume',\r\n        key: 'quantityVolume',\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'operation',\r\n        fixed: 'right',\r\n        width: 60,\r\n        render: () => <a>Delete</a>,\r\n      },\r\n    ]\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    }\r\n\r\n    const { newCuttingId, cuttingData }= this.props;\r\n\r\n    const fullDate = new Date();\r\n    const today = fullDate.toLocaleDateString(\"en-US\")\r\n    const isInputDisabled = true;\r\n\r\n    if(Object.keys(cuttingData).length > 0)\r\n    {\r\n      const result = cuttingData.itemList.filter(data => {\r\n        return data.group === \"whole\"\r\n      })\r\n      // console.log('cutting', cuttingData.supplyList[0].production_id);\r\n      console.log('itemList', result);\r\n    }\r\n\r\n    let { \r\n        inputItemSelectOption, \r\n        outputItemSelectOption,\r\n        productionIdSelectOption, \r\n        formProductionIdHideToggle,\r\n        outputItemList,\r\n        inputQuantityWeightValue,\r\n        inputQuantityVolumeValue,\r\n       } = this.state\r\n    // Populate Input item list\r\n    inputItemSelectOption = inputItemSelectOption || [];\r\n\r\n    // Populate Output item list\r\n    outputItemSelectOption = outputItemSelectOption || [];\r\n\r\n    // Populate Production Id  list\r\n    productionIdSelectOption = productionIdSelectOption || [];\r\n\r\n    formProductionIdHideToggle = formProductionIdHideToggle === null ? true : formProductionIdHideToggle;\r\n\r\n    outputItemList = outputItemList || [];\r\n\r\n    inputQuantityWeightValue = inputQuantityWeightValue || \"\";\r\n    inputQuantityVolumeValue = inputQuantityVolumeValue || \"\";\r\n\r\n    console.log(productionIdSelectOption);\r\n\r\n    return (\r\n      <div>\r\n        <Helmet title=\"Input / Pengajuan\" />\r\n        <div className=\"kit__utils__heading\">\r\n          <h5>Input pengajuan</h5>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form \r\n              {...formItemLayout} \r\n              ref={this.formRefInput}\r\n              labelAlign=\"left\"\r\n            >\r\n              <Form.Item name=\"cuttingId\" label=\"Kode Cutting\">\r\n                <Input placeholder={newCuttingId} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item name=\"dateToday\" label=\"Tanggal\">\r\n                <Input placeholder={today} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <div className=\"kit__utils__heading\">\r\n                <h5>Asal Item Produksi</h5>\r\n              </div>\r\n              <Form.Item id=\"itemSource\" name=\"itemSource\" label=\"Asal Item\" rules={[{ required: true, message: 'Asal Item harus dipilih' }]}>\r\n                <Select onChange={this.onItemSourceChange} placeholder=\"Pilih asal item\">\r\n                  <Option value=\"production\" key=\"production\">Pengajuan</Option>\r\n                  <Option value=\"freshWarehouse\" key=\"freshWarehouse\">Stok fresh</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item id=\"productionId\" name=\"productionId\" label=\"Kode produksi\" rules={[{ required: true, message: 'Item harus dipilih' }]} style={formProductionIdHideToggle === true ? { display: 'none'} : { display: ''}}>\r\n                <Select onChange={this.onProductionIdChange} placeholder=\"Pilih Kode Produksi\">\r\n                  {productionIdSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item id=\"itemName\" name=\"itemName\" label=\"Nama Item\" rules={[{ required: true, message: 'Item harus dipilih' }]}>\r\n                <Select onChange={this.onInputItemChange} placeholder=\"Pilih item\">\r\n                  {inputItemSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"inputQuantityWeight\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" value={inputQuantityWeightValue} placeholder=\"Masukkan quantity\" addonAfter=\"kg\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"inputQuantityVolume\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" value={inputQuantityVolumeValue} placeholder=\"Masukkan quantity\" addonAfter=\"Ekor\" />\r\n              </Form.Item>\r\n            </Form>\r\n            <Form \r\n              {...formItemLayout}\r\n              ref={this.formRefOutput}\r\n              labelAlign=\"left\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <div className=\"kit__utils__heading\">\r\n                <h5>Hasil Produksi</h5>\r\n              </div>\r\n              <Form.Item id=\"outputItemName\" name=\"outputItemName\" label=\"Nama Item\" rules={[{ required: true, message: 'Item harus dipilih' }]}>\r\n                <Select onChange={this.onOutputItemChange} placeholder=\"Pilih item\">\r\n                  {outputItemSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"quantityWeight\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter=\"kg\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"quantityVolume\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter=\"Ekor\" />\r\n              </Form.Item>\r\n              <button type=\"submit\" className=\"btn btn-success\">\r\n                Tambah Hasil Produksi\r\n              </button>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <div className=\"mb-4 kit__utils__scrollTable\">\r\n                <Table columns={columns} dataSource={outputItemList} scroll={{ x: 1500, y: 300 }} />\r\n              </div>\r\n            </Form>\r\n            <Link to=\"/\" className=\"kit__utils__link font-size-16\">\r\n              <i className=\"fe fe-arrow-left mr-1 align-middle\" />\r\n              Kembali\r\n            </Link>\r\n            <Button onClick={this.onButtonAddClick} className=\"float-right\" style={{backgroundColor: \"#55c392\"}}>\r\n              Proses\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcessCutting);\r\n"],"sourceRoot":""}