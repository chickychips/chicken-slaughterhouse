{"version":3,"sources":["pages/transaction/form/input/index.js"],"names":["Option","Select","AddTransaction","state","itemSelectOption","orderList","quantityWeightMeasurementUnit","quantityVolumeMeasurementUnit","customerSelectOption","totalDiscount","totalPrice","totalQuantityWeight","totalQuantityVolume","thawingOptionHideToggle","formRefInput","React","createRef","onItemSourceChange","event","transactionData","props","current","setFieldsValue","quantityWeight","undefined","quantityVolume","itemName","isThawed","stockFresh","map","o","value","item_name","key","setState","onItemChange","item","getFieldsValue","itemSource","filter","data","stockFrozen","quantity_weight","group","type","quantity_volume","onQuantityWeightChange","unitPrice","discount","target","onDiscountChange","onUnitPriceChange","onFinish","values","keyId","length","itemType","push","name","isFrozen","isThawedDescription","console","log","parseInt","onButtonAddClick","salesOrderId","customer","notification","error","message","payload","id","items","addTransaction","this","generateSalesOrderId","getTransactionData","columns","title","width","dataIndex","fixed","render","today","Date","toLocaleDateString","Object","keys","customerList","className","labelCol","xs","span","sm","wrapperCol","ref","labelAlign","Item","label","placeholder","disabled","rules","required","onChange","addonAfter","addonBefore","valuePropName","style","display","dataSource","scroll","x","y","to","onClick","Component","connect","transaction","dispatch"],"mappings":"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","file":"static/js/23.4d6b22c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Checkbox, Table, Input, Select, Form, Button, notification } from 'antd';\r\n// import { Table, Input, Select, Form, Button } from 'antd';\r\nimport './style.module.css';\r\n\r\nconst { Option } = Select\r\n\r\nconst mapStateToProps = ({ transaction }) => ({\r\n  salesOrderId: transaction.salesOrderId,\r\n  transactionData: transaction.transactionData,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generateSalesOrderId: () => {\r\n      dispatch({\r\n        type: 'transaction/GENERATE_ORDER_ID',\r\n      })\r\n    },\r\n    getTransactionData: () => {\r\n      dispatch({\r\n        type: 'transaction/GET_TRANSACTION_DATA',\r\n      })\r\n    },\r\n    addTransaction: (payload) => {\r\n      dispatch({\r\n        type: 'transaction/ADD_TRANSACTION',\r\n        payload,\r\n      })\r\n    },\r\n  }\r\n}\r\n\r\nclass AddTransaction extends React.Component {\r\n  state = {\r\n    itemSelectOption: null,\r\n    orderList: null,\r\n    quantityWeightMeasurementUnit: null,\r\n    quantityVolumeMeasurementUnit: null,\r\n    customerSelectOption: null,\r\n    totalDiscount: null,\r\n    totalPrice: null,\r\n    totalQuantityWeight: null,\r\n    totalQuantityVolume: null,\r\n    thawingOptionHideToggle: null,\r\n  }\r\n\r\n  formRefInput = React.createRef();\r\n\r\n  componentDidMount() {\r\n    const { generateSalesOrderId, getTransactionData }= this.props;\r\n    generateSalesOrderId();\r\n    getTransactionData();\r\n  }\r\n\r\n\r\n  onItemSourceChange = (event) => {\r\n    const { transactionData }= this.props;\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n      itemName: undefined,\r\n      isThawed: false,\r\n    });\r\n    let itemSelectOption = \"\";\r\n    let thawingOptionHideToggle = true;\r\n\r\n    if(event === \"freshWarehouse\")\r\n    {\r\n      itemSelectOption = transactionData.stockFresh.map(o => (\r\n        <Option value={o.item_name} key={o.item_name}>Fresh {o.item_name}</Option>\r\n      ))\r\n    }\r\n    else\r\n    {\r\n      thawingOptionHideToggle = false;\r\n      itemSelectOption = transactionData.stockFresh.map(o => (\r\n        <Option value={o.item_name} key={o.item_name}>Frozen {o.item_name}</Option>\r\n      ))\r\n    }\r\n\r\n    this.setState({\r\n      thawingOptionHideToggle,\r\n      itemSelectOption,\r\n      quantityWeightMeasurementUnit: \"kg\",\r\n      quantityVolumeMeasurementUnit: \"Ekor\",\r\n    })\r\n  }\r\n\r\n  onItemChange = (event) => {\r\n    const { transactionData }= this.props;\r\n    const { itemSource } = this.formRefInput.current.getFieldsValue();\r\n\r\n    let quantityVolumeMeasurementUnit = \"\";\r\n    let quantityWeightMeasurementUnit = \"\";\r\n\r\n    let item = [];\r\n    if(itemSource === \"freshWarehouse\")\r\n    {\r\n      item = transactionData.stockFresh.filter(data => {\r\n        return data.item_name === event\r\n      })\r\n    }\r\n    else\r\n    {\r\n      item = transactionData.stockFrozen.filter(data => {\r\n        return data.item_name === event\r\n      })\r\n    }\r\n\r\n    quantityWeightMeasurementUnit = `kg | Stok : ${item[0].quantity_weight}`\r\n\r\n    if(item[0].group === \"whole\")\r\n    {\r\n      quantityVolumeMeasurementUnit = `${item[0].type === \"main\" ? \"Ekor\" : \"Pax\"} | Stok : ${item[0].quantity_volume}`;\r\n    }\r\n    else{\r\n      quantityVolumeMeasurementUnit = `Pax | Stok : ${item[0].quantity_volume}`;\r\n    }\r\n\r\n    this.setState({\r\n      quantityWeightMeasurementUnit,\r\n      quantityVolumeMeasurementUnit,\r\n    })\r\n  }\r\n\r\n  onQuantityWeightChange = (event) => {\r\n    let { unitPrice, discount } = this.formRefInput.current.getFieldsValue();\r\n\r\n    if (unitPrice === undefined || unitPrice === \"\")\r\n      unitPrice = 0;\r\n    if (discount === undefined || discount === \"\")\r\n      discount = 0;\r\n\r\n    const totalPrice = (event.target.value * unitPrice) - discount;\r\n    this.formRefInput.current.setFieldsValue({\r\n      totalPrice,\r\n    });\r\n  }\r\n\r\n  onDiscountChange = (event) => {\r\n    let { unitPrice, quantityWeight } = this.formRefInput.current.getFieldsValue();\r\n\r\n    if (unitPrice === undefined || unitPrice === \"\")\r\n      unitPrice = 0;\r\n    if (quantityWeight === undefined || quantityWeight === \"\")\r\n      quantityWeight = 0;\r\n\r\n    const totalPrice = (unitPrice * quantityWeight) - event.target.value;\r\n    this.formRefInput.current.setFieldsValue({\r\n      totalPrice,\r\n    });\r\n  }\r\n\r\n  onUnitPriceChange = (event) => {\r\n    let { discount, quantityWeight } = this.formRefInput.current.getFieldsValue();\r\n\r\n    if (quantityWeight === undefined || quantityWeight === \"\")\r\n      quantityWeight = 0;\r\n    if (discount === undefined || discount === \"\")\r\n      discount = 0;\r\n\r\n    const totalPrice = (event.target.value * quantityWeight) - discount;\r\n    this.formRefInput.current.setFieldsValue({\r\n      totalPrice,\r\n    });\r\n  }\r\n\r\n  onFinish = values => {\r\n    const { itemSource } = this.formRefInput.current.getFieldsValue();\r\n\r\n    let { \r\n      orderList, \r\n      totalDiscount,\r\n      totalPrice,\r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n    } = this.state;\r\n\r\n    this.setState({\r\n      orderList: [],\r\n    })\r\n\r\n    let keyId = 1;\r\n    if(orderList === null)\r\n    {\r\n      orderList = []\r\n    }\r\n    else if (orderList.length > 0)\r\n    {\r\n      keyId = orderList[orderList.length-1].key + 1;\r\n    }\r\n\r\n    values.discount = values.discount || 0;\r\n\r\n    const itemType = itemSource === \"freshWarehouse\" ? \"FRESH\" : \"FROZEN\";\r\n\r\n    orderList.push({\r\n      key: keyId,\r\n      itemType,\r\n      name: values.itemName,\r\n      isFrozen: itemType === \"FROZEN\",\r\n      isThawed: values.isThawed,\r\n      isThawedDescription: values.isThawed === true ? \"Iya\" : \"Tidak\",\r\n      quantityWeight: values.quantityWeight,\r\n      quantityVolume: values.quantityVolume,\r\n      unitPrice: values.unitPrice,\r\n      discount: values.discount,\r\n      totalPrice: values.totalPrice\r\n    })\r\n\r\n    console.log(orderList);\r\n    \r\n    totalDiscount += parseInt(values.discount, 10);\r\n    totalPrice += parseInt(values.totalPrice, 10);\r\n    totalQuantityWeight += parseInt(values.quantityWeight, 10);\r\n    totalQuantityVolume += parseInt(values.quantityVolume, 10);\r\n\r\n    this.setState({\r\n      orderList,\r\n      totalDiscount,\r\n      totalPrice,\r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n    })\r\n\r\n    this.formRefInput.current.setFieldsValue({\r\n      itemName: undefined,\r\n      quantityWeight: undefined,\r\n      quantityVolume: undefined,\r\n      unitPrice: undefined,\r\n      discount: undefined,\r\n      totalPrice: undefined,\r\n    });\r\n  }\r\n\r\n  onButtonAddClick = () => {\r\n    const { salesOrderId } = this.props;\r\n\r\n    const { \r\n      customer\r\n    } = this.formRefInput.current.getFieldsValue();\r\n\r\n    const { \r\n      totalQuantityWeight,\r\n      totalQuantityVolume,\r\n      totalDiscount,\r\n      totalPrice,\r\n      orderList,\r\n    } = this.state;\r\n\r\n    if( orderList === null || orderList.length < 1)\r\n    {\r\n      notification.error({\r\n        message: 'Mohon isi daftar order'\r\n      })\r\n      return;\r\n    }\r\n\r\n    const payload = \r\n      {\r\n        id: salesOrderId,\r\n        customer,\r\n        totalQuantityWeight,\r\n        totalQuantityVolume,\r\n        totalDiscount,\r\n        totalPrice,\r\n        items: orderList,\r\n      }      \r\n\r\n    const { addTransaction } = this.props;\r\n\r\n    // send transaction data to backend\r\n    addTransaction(payload);\r\n  }\r\n\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: 'Tipe Item',\r\n        width: 100,\r\n        dataIndex: 'itemType',\r\n        key: 'itemType',\r\n      },\r\n      {\r\n        title: 'Nama Item',\r\n        width: 100,\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: 'Cairkan Item',\r\n        width: 100,\r\n        dataIndex: 'isThawedDescription',\r\n        key: 'isThawedDescription',\r\n      },\r\n      {\r\n        title: 'Qty (kg)',\r\n        width: 100,\r\n        dataIndex: 'quantityWeight',\r\n        key: 'quantityWeight',\r\n      },\r\n      {\r\n        title: 'Qty (Ekor/Pax)',\r\n        width: 100,\r\n        dataIndex: 'quantityVolume',\r\n        key: 'quantityVolume',\r\n      },\r\n      {\r\n        title: 'Harga /kg',\r\n        width: 100,\r\n        dataIndex: 'unitPrice',\r\n        key: 'unitPrice',\r\n      },\r\n      {\r\n        title: 'Discount',\r\n        width: 100,\r\n        dataIndex: 'discount',\r\n        key: 'discount',\r\n      },\r\n      {\r\n        title: 'Total',\r\n        width: 100,\r\n        dataIndex: 'totalPrice',\r\n        key: 'totalPrice',\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'operation',\r\n        fixed: 'right',\r\n        width: 60,\r\n        render: () => <a>Delete</a>,\r\n      },\r\n    ]\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    }\r\n\r\n    const { salesOrderId, transactionData }= this.props;\r\n\r\n    const fullDate = new Date();\r\n    const today = fullDate.toLocaleDateString(\"en-US\")\r\n    const isInputDisabled = true;\r\n\r\n    let { \r\n        thawingOptionHideToggle,\r\n        itemSelectOption, \r\n        orderList,\r\n        quantityWeightMeasurementUnit,\r\n        quantityVolumeMeasurementUnit,\r\n        customerSelectOption,\r\n        totalDiscount,\r\n        totalPrice,\r\n        totalQuantityWeight,\r\n        totalQuantityVolume,\r\n       } = this.state\r\n\r\n    thawingOptionHideToggle = thawingOptionHideToggle === null ? true : thawingOptionHideToggle;\r\n\r\n    customerSelectOption = customerSelectOption || [];\r\n\r\n    itemSelectOption = itemSelectOption || [];\r\n\r\n    orderList = orderList || [];\r\n\r\n    quantityWeightMeasurementUnit = quantityWeightMeasurementUnit || \"kg\";\r\n    quantityVolumeMeasurementUnit = quantityVolumeMeasurementUnit || \"Ekor\";\r\n\r\n    totalDiscount = totalDiscount || 0;\r\n    totalPrice = totalPrice || 0;\r\n    totalQuantityWeight = totalQuantityWeight || 0;\r\n    totalQuantityVolume = totalQuantityVolume || 0;\r\n\r\n    if(Object.keys(transactionData).length > 0)\r\n    {\r\n      // Populate customer list\r\n      customerSelectOption = transactionData.customerList.map(o => (\r\n        <Option value={o.name} key={o.name}>{o.name}</Option>\r\n      ))\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Helmet title=\"Input / Order\" />\r\n        <div className=\"kit__utils__heading\">\r\n          <h5>Input Order</h5>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <Form \r\n              {...formItemLayout} \r\n              ref={this.formRefInput}\r\n              labelAlign=\"left\"\r\n              onFinish={this.onFinish}\r\n            >\r\n              <Form.Item name=\"salesOrderId\" label=\"Kode Cutting\">\r\n                <Input placeholder={salesOrderId} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item name=\"dateToday\" label=\"Tanggal\">\r\n                <Input placeholder={today} disabled={isInputDisabled} />\r\n              </Form.Item>\r\n              <Form.Item id=\"customer\" name=\"customer\" label=\"Nama Customer\" rules={[{ required: true, message: 'Customer harus dipilih' }]}>\r\n                <Select placeholder=\"Pilih customer\">\r\n                  {customerSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item id=\"itemSource\" name=\"itemSource\" label=\"Asal Item\" rules={[{ required: true, message: 'Asal Item harus dipilih' }]}>\r\n                <Select onChange={this.onItemSourceChange} placeholder=\"Pilih asal item\">\r\n                  <Option value=\"freshWarehouse\" key=\"freshWarehouse\">Stok Fresh</Option>\r\n                  <Option value=\"frozenWarehouse\" key=\"frozenWarehouse\">Stok Frozen</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item id=\"itemName\" name=\"itemName\" label=\"Nama Item\" rules={[{ required: true, message: 'Item harus dipilih' }]}>\r\n                <Select onChange={this.onItemChange} placeholder=\"Pilih item\">\r\n                  {itemSelectOption}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"quantityWeight\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" onChange={this.onQuantityWeightChange} placeholder=\"Masukkan quantity\" addonAfter={quantityWeightMeasurementUnit} />\r\n              </Form.Item>\r\n              <Form.Item name=\"quantityVolume\" label=\"Quantity\" rules={[{ required: true, message: 'Quantity harus diisi' }]}>\r\n                <Input type=\"number\" placeholder=\"Masukkan quantity\" addonAfter={quantityVolumeMeasurementUnit} />\r\n              </Form.Item>\r\n              <Form.Item name=\"unitPrice\" label=\"Harga / kg\" rules={[{ required: true, message: 'Harga harus diisi' }]}>\r\n                <Input type=\"number\" onChange={this.onUnitPriceChange} placeholder=\"Masukkan harga/kg\" addonBefore=\"Rp.\" addonAfter=\"/ kg\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"discount\" label=\"Discount\">\r\n                <Input type=\"number\" onChange={this.onDiscountChange} placeholder=\"0\" addonBefore=\"Rp.\" addonAfter=\"/ kg\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"totalPrice\" label=\"Total harga\" rules={[{ required: true, message: 'Total harga harus diisi' }]}>\r\n                <Input type=\"number\" disabled={isInputDisabled} placeholder=\"Masukkan total harga\" addonBefore=\"Rp.\" />\r\n              </Form.Item>\r\n              <Form.Item valuePropName=\"checked\" name=\"isThawed\" style={thawingOptionHideToggle === true ? { display: 'none'} : { display: ''}}>\r\n                <Checkbox className=\"text-uppercase\">\r\n                  Centang jika item ingin dicairkan\r\n                </Checkbox>\r\n              </Form.Item>\r\n              <button type=\"submit\" className=\"btn btn-success\">\r\n                Tambah Order\r\n              </button>\r\n              <div>\r\n                <br />\r\n              </div>\r\n              <div className=\"mb-4 kit__utils__scrollTable\">\r\n                <Table columns={columns} dataSource={orderList} scroll={{ x: 1500, y: 300 }} />\r\n              </div>\r\n            </Form>\r\n            <div className=\"border-top text-dark font-size-18 pt-4\">\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (kg): <strong className=\"font-size-24\">Rp. {totalQuantityWeight}</strong>\r\n              </p>\r\n              <p className=\"mb-1 text-right\">\r\n                Total Qty (Ekor/Pax): <strong className=\"font-size-24\">Rp. {totalQuantityVolume}</strong>\r\n              </p>\r\n              <p className=\"mb-1 text-right\">\r\n                Total Discount: <strong className=\"font-size-24\">Rp {totalDiscount}</strong>\r\n              </p>\r\n              <p className=\"mb-4 text-right\">\r\n                Grand Total: <strong className=\"font-size-36\">Rp {totalPrice}</strong>\r\n              </p>\r\n              <Link to=\"/transaction\" className=\"kit__utils__link font-size-16\">\r\n                <i className=\"fe fe-arrow-left mr-1 align-middle\" />\r\n                Kembali\r\n              </Link>\r\n              <Button onClick={this.onButtonAddClick} className=\"btn btn-lg btn-success width-200 mb-2 float-right\">\r\n                Submit Order\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTransaction);\r\n"],"sourceRoot":""}